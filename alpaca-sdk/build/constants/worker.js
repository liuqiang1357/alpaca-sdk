import { MdexSwapDex, PancakeSwapDex, WaultSwapDex } from '../entity';
import { mapTokenProfiles } from './tokenProfile';
import { CAKEBNBPancakeswapWorkerAddress, BTCBBNBPancakeswapWorkerAddress, ETHBNBPancakeswapWorkerAddress, DOTBNBPancakeswapWorkerAddress, UNIBNBPancakeswapWorkerAddress, LINKBNBPancakeswapWorkerAddress, XVSBNBPancakeswapWorkerAddress, YFIBNBPancakeswapWorkerAddress, USDTBUSDPancakeswapWorkerAddress, BNBBUSDPancakeswapWorkerAddress, VAIBUSDPancakeswapWorkerAddress, USDCBUSDPancakeswapWorkerAddress, DAIBUSDPancakeswapWorkerAddress, USTBUSDPancakeswapWorkerAddress, BETHETHPancakeswapWorkerAddress, COMPETHPancakeswapWorkerAddress, SUSHIETHPancakeswapWorkerAddress, ITAMBNBPancakeswapWorkerAddress, CAKEBNBPancakeswapWorkerStrategies, BTCBBNBPancakeswapWorkerStrategies, ETHBNBPancakeswapWorkerStrategies, DOTBNBPancakeswapWorkerStrategies, BETHETHPancakeswapWorkerStrategies, COMPETHPancakeswapWorkerStrategies, DAIBUSDPancakeswapWorkerStrategies, ITAMBNBPancakeswapWorkerStrategies, LINKBNBPancakeswapWorkerStrategies, SUSHIETHPancakeswapWorkerStrategies, UNIBNBPancakeswapWorkerStrategies, USDCBUSDPancakeswapWorkerStrategies, USDTBUSDPancakeswapWorkerStrategies, USTBUSDPancakeswapWorkerStrategies, VAIBUSDPancakeswapWorkerStrategies, BNBBUSDPancakeswapWorkerStrategies, XVSBNBPancakeswapWorkerStrategies, YFIBNBPancakeswapWorkerStrategies, BUSDBNBPancakeswapWorkerAddress, BUSDBNBPancakeswapWorkerStrategies, BUSDALPACAPancakeswapWorkerAddress, BUSDALPACAPancakeswapWorkerStrategies, BTCBBUSDPancakeswapWorkerAddress, BTCBBUSDPancakeswapWorkerStrategies, CAKEBNBPancakeswapWorkerConfig, BTCBBUSDPancakeswapWorkerConfig, ETHBNBPancakeswapWorkerConfig, DOTBNBPancakeswapWorkerConfig, UNIBNBPancakeswapWorkerConfig, LINKBNBPancakeswapWorkerConfig, XVSBNBPancakeswapWorkerConfig, YFIBNBPancakeswapWorkerConfig, ITAMBNBPancakeswapWorkerConfig, USDTBUSDPancakeswapWorkerConfig, BNBBUSDPancakeswapWorkerConfig, VAIBUSDPancakeswapWorkerConfig, USDCBUSDPancakeswapWorkerConfig, DAIBUSDPancakeswapWorkerConfig, USTBUSDPancakeswapWorkerConfig, BETHETHPancakeswapWorkerConfig, COMPETHPancakeswapWorkerConfig, SUSHIETHPancakeswapWorkerConfig, BUSDALPACAPancakeswapWorkerConfig, BTCBBNBPancakeswapWorkerConfig, BUSDBNBPancakeswapWorkerConfig, BMXXBNBPancakeswapWorkerAddress, BMXXBNBPancakeswapWorkerStrategies, BMXXBNBPancakeswapWorkerConfig, BELTBNBPancakeswapWorkerAddress, BELTBNBPancakeswapWorkerStrategies, BELTBNBPancakeswapWorkerConfig, BORBNBPancakeswapWorkerAddress, BORBNBPancakeswapWorkerStrategies, BORBNBPancakeswapWorkerConfig, BRYBNBPancakeswapWorkerAddress, BRYBNBPancakeswapWorkerStrategies, BRYBNBPancakeswapWorkerConfig, PCWSBNBPancakeswapWorkerAddress, PCWSBNBPancakeswapWorkerStrategies, PCWSBNBPancakeswapWorkerConfig, SWINGBYBNBPancakeswapWorkerConfig, SWINGBYBNBPancakeswapWorkerAddress, SWINGBYBNBPancakeswapWorkerStrategies, ALPACABUSDPancakeswapWorkerAddress, ALPACABUSDPancakeswapWorkerStrategies, ALPACABUSDPancakeswapWorkerConfig, BNBETHPancakeswapWorkerAddress, BNBETHPancakeswapWorkerStrategies, BNBETHPancakeswapWorkerConfig, DODOBNBPancakeswapWorkerAddress, DODOBNBPancakeswapWorkerStrategies, DODOBNBPancakeswapWorkerConfig, BNBUSDTPancakeswapWorkerAddress, BNBUSDTPancakeswapWorkerStrategies, BNBUSDTPancakeswapWorkerConfig, USDTBNBPancakeswapWorkerAddress, USDTBNBPancakeswapWorkerStrategies, USDTBNBPancakeswapWorkerConfig, BUSDUSDTPancakeswapWorkerAddress, BUSDUSDTPancakeswapWorkerStrategies, BUSDUSDTPancakeswapWorkerConfig, CAKEBUSDPancakeswapWorkerAddress, CAKEBUSDPancakeswapWorkerStrategies, CAKEBUSDPancakeswapWorkerConfig, BNBBTCBPancakeswapWorkerAddress, BNBBTCBPancakeswapWorkerStrategies, BNBBTCBPancakeswapWorkerConfig, BUSDBTCBPancakeswapWorkerAddress, BUSDBTCBPancakeswapWorkerStrategies, BUSDBTCBPancakeswapWorkerConfig, WEXBNBWaultswapWorkerAddress, WEXBNBWaultswapWorkerStrategies, WEXBNBWaultswapWorkerConfig, ETHBUSDWaultswapWorkerAddress, ETHBUSDWaultswapWorkerStrategies, ETHBUSDWaultswapWorkerConfig, BUSDETHWaultswapWorkerAddress, BUSDETHWaultswapWorkerStrategies, BUSDETHWaultswapWorkerConfig, USDTALPACAWaultswapWorkerAddress, USDTALPACAWaultswapWorkerStrategies, USDTALPACAWaultswapWorkerConfig, ALPACAUSDTWaultswapWorkerAddress, ALPACAUSDTWaultswapWorkerStrategies, ALPACAUSDTWaultswapWorkerConfig, ETHPancakeswapCakeMaxiWorkerAddress, ETHPancakeswapCakeMaxiWorkerConfig, ETHPancakeswapCakeMaxiWorkerStrategies, USDTPancakeswapCakeMaxiWorkerAddress, USDTPancakeswapCakeMaxiWorkerConfig, USDTPancakeswapCakeMaxiWorkerStrategies, WEXUSDTWaultswapWorkerAddress, WEXUSDTWaultswapWorkerStrategies, WEXUSDTWaultswapWorkerConfig, BTCBETHWaultswapWorkerAddress, BTCBETHWaultswapWorkerStrategies, BTCBETHWaultswapWorkerConfig, ETHBTCBWaultswapWorkerAddress, ETHBTCBWaultswapWorkerStrategies, ETHBTCBWaultswapWorkerConfig, BUSDBNBWaultswapWorkerAddress, BUSDBNBWaultswapWorkerStrategies, BUSDBNBWaultswapWorkerConfig, BNBBUSDWaultswapWorkerAddress, BNBBUSDWaultswapWorkerStrategies, BNBBUSDWaultswapWorkerConfig, ALPACABNBWaultswapWorkerAddress, ALPACABNBWaultswapWorkerStrategies, ALPACABNBWaultswapWorkerConfig, USDTBUSDWaultswapWorkerAddress, USDTBUSDWaultswapWorkerStrategies, USDTBUSDWaultswapWorkerConfig, BNBALPACAWaultswapWorkerAddress, BNBALPACAWaultswapWorkerStrategies, BNBALPACAWaultswapWorkerConfig, BUSDUSDTWaultswapWorkerAddress, BUSDUSDTWaultswapWorkerStrategies, BUSDUSDTWaultswapWorkerConfig, BETHETHWaultswapWorkerAddress, BETHETHWaultswapWorkerStrategies, BETHETHWaultswapWorkerConfig, WAULTXBNBWaultswapWorkerAddress, WAULTXBNBWaultswapWorkerStrategies, WAULTXBNBWaultswapWorkerConfig, BTCBUSDTWaultswapWorkerAddress, BTCBUSDTWaultswapWorkerStrategies, BTCBUSDTWaultswapWorkerConfig, USDTBTCBWaultswapWorkerAddress, USDTBTCBWaultswapWorkerConfig, USDTBTCBWaultswapWorkerStrategies, ODDZBNBPancakeswapWorkerAddress, ODDZBNBPancakeswapWorkerStrategies, ODDZBNBPancakeswapWorkerConfig, USDTETHWaultswapWorkerAddress, USDTETHWaultswapWorkerStrategies, USDTETHWaultswapWorkerConfig, ETHUSDTWaultswapWorkerAddress, ETHUSDTWaultswapWorkerStrategies, ETHUSDTWaultswapWorkerConfig, BUSDBTCBWaultswapWorkerAddress, BUSDBTCBWaultswapWorkerStrategies, BUSDBTCBWaultswapWorkerConfig, BTCBBUSDWaultswapWorkerAddress, BTCBBUSDWaultswapWorkerStrategies, BTCBBUSDWaultswapWorkerConfig, BNBPancakeswapCakeMaxiWorkerAddress, BNBPancakeswapCakeMaxiWorkerStrategies, BNBPancakeswapCakeMaxiWorkerConfig, BUSDPancakeswapCakeMaxiWorkerAddress, BUSDPancakeswapCakeMaxiWorkerConfig, BUSDPancakeswapCakeMaxiWorkerStrategies, BTCBPancakeswapCakeMaxiWorkerAddress, BTCBPancakeswapCakeMaxiWorkerConfig, BTCBPancakeswapCakeMaxiWorkerStrategies, ADABNBPancakeswapWorkerAddress, ADABNBPancakeswapWorkerConfig, ADABNBPancakeswapWorkerStrategies, MATICUSDTWaultswapWorkerAddress, MATICUSDTWaultswapWorkerStrategies, MATICUSDTWaultswapWorkerConfig, FORMBUSDPancakeswapWorkerAddress, FORMBUSDPancakeswapWorkerStrategies, FORMBUSDPancakeswapWorkerConfig, TUSDBUSDPancakeswapWorkerAddress, TUSDBUSDPancakeswapWorkerStrategies, TUSDBUSDPancakeswapWorkerConfig, CAKEUSDTPancakeswapWorkerAddress, CAKEUSDTPancakeswapWorkerStrategies, CAKEUSDTPancakeswapWorkerConfig, USDCUSDTPancakeswapWorkerAddress, USDCUSDTPancakeswapWorkerStrategies, USDCUSDTPancakeswapWorkerConfig, TRXBNBPancakeswapWorkerAddress, TRXBNBPancakeswapWorkerStrategies, TRXBNBPancakeswapWorkerConfig, BTTBNBPancakeswapWorkerAddress, BTTBNBPancakeswapWorkerStrategies, BTTBNBPancakeswapWorkerConfig, ORBSBUSDPancakeswapWorkerAddress, ORBSBUSDPancakeswapWorkerStrategies, ORBSBUSDPancakeswapWorkerConfig, BUSDTUSDPancakeswapWorkerAddress, BUSDTUSDPancakeswapWorkerConfig, BUSDTUSDPancakeswapWorkerStrategies, TUSDPancakeswapCakeMaxiWorkerAddress, TUSDPancakeswapCakeMaxiWorkerConfig, TUSDPancakeswapCakeMaxiWorkerStrategies, AXSBNBPancakeswapWorkerAddress, AXSBNBPancakeswapWorkerStrategies, AXSBNBPancakeswapWorkerConfig, TUSDUSDTWaultswapWorkerAddress, TUSDUSDTWaultswapWorkerStrategies, TUSDUSDTWaultswapWorkerConfig, USDTTUSDWaultswapWorkerAddress, USDTTUSDWaultswapWorkerStrategies, USDTTUSDWaultswapWorkerConfig, TRXBUSDPancakeswapWorkerAddress, TRXBUSDPancakeswapWorkerStrategies, TRXBUSDPancakeswapWorkerConfig, BTTBUSDPancakeswapWorkerAddress, BTTBUSDPancakeswapWorkerStrategies, BTTBUSDPancakeswapWorkerConfig, PMONBUSDPancakeswapWorkerAddress, PMONBUSDPancakeswapWorkerStrategies, PMONBUSDPancakeswapWorkerConfig, PHABUSDPancakeswapWorkerAddress, PHABUSDPancakeswapWorkerStrategies, PHABUSDPancakeswapWorkerConfig, WUSDBUSDWaultswapWorkerAddress, WUSDBUSDWaultswapWorkerStrategies, WUSDBUSDWaultswapWorkerConfig, MBOXBNBPancakeswapWorkerAddress, MBOXBNBPancakeswapWorkerStrategies, MBOXBNBPancakeswapWorkerConfig, NAOSBNBPancakeswapWorkerAddress, NAOSBNBPancakeswapWorkerStrategies, NAOSBNBPancakeswapWorkerConfig, BTCBUSDTMdexWorkerAddress, BTCBUSDTMdexWorkerStrategies, BTCBUSDTMdexWorkerConfig, USDTBTCBMdexWorkerAddress, USDTBTCBMdexWorkerStrategies, USDTBTCBMdexWorkerConfig, DVIBNBPancakeswapWorkerAddress, DVIBNBPancakeswapWorkerStrategies, DVIBNBPancakeswapWorkerConfig, QBTBNBPancakeswapWorkerAddress, QBTBNBPancakeswapWorkerStrategies, QBTBNBPancakeswapWorkerConfig, ETHUSDTMdexWorkerAddress, ETHUSDTMdexWorkerStrategies, ETHUSDTMdexWorkerConfig, USDTETHMdexWorkerAddress, USDTETHMdexWorkerStrategies, USDTETHMdexWorkerConfig, MDXBNBMdexWorkerAddress, MDXBNBMdexworkerStrategies, MDXBNBMdexWorkerConfig, MDXBUSDMdexWorkerAddress, MDXBUSDMdexWorkerStrategies, MDXBUSDMdexWorkerConfig, WBNBUSDTMdexWorkerAddress, WBNBUSDTMdexWorkerConfig, WBNBUSDTMdexWorkerStrategies, USDTWBNBMdexWorkerAddress, USDTWBNBMdexworkerStrategies, USDTWBNBMdexWorkerConfig, WBNBETHMdexWorkerAddress, WBNBETHMdexWorkerStrategies, WBNBETHMdexWorkerConfig, ETHWBNBMdexWorkerAddress, ETHWBNBMdexworkerStrategies, ETHWBNBMdexWorkerConfig, WBNBBUSDMdexWorkerAddress, WBNBBUSDMdexWorkerStrategies, WBNBBUSDMdexWorkerConfig, BUSDWBNBMdexWorkerAddress, BUSDWBNBMdexworkerStrategies, BUSDWBNBMdexWorkerConfig, BTCBETHMdexWorkerAddress, BTCBETHMdexWorkerStrategies, BTCBETHMdexWorkerConfig, ETHBTCBMdexWorkerAddress, ETHBTCBMdexWorkerStrategies, ETHBTCBMdexWorkerConfig, WBNBBTCBMdexWorkerAddress, WBNBBTCBMdexWorkerStrategies, WBNBBTCBMdexWorkerConfig, BTCBWBNBMdexWorkerAddress, BTCBWBNBMdexworkerStrategies, BTCBWBNBMdexWorkerConfig, USDCUSDTMdexWorkerAddress, USDCUSDTMdexWorkerStrategies, USDCUSDTMdexWorkerConfig, DAIUSDTMdexWorkerAddress, DAIUSDTMdexWorkerStrategies, DAIUSDTMdexWorkerConfig, POTSBUSDPancakeswapWorkerAddress, POTSBUSDPancakeswapWorkerStrategies, POTSBUSDPancakeswapWorkerConfig, BMONBUSDPancakeswapWorkerAddress, BMONBUSDPancakeswapWorkerStrategies, BMONBUSDPancakeswapWorkerConfig, HIGHBUSDPancakeswapWorkerAddress, HIGHBUSDPancakeswapWorkerStrategies, HIGHBUSDPancakeswapWorkerConfig, BMONBNBPancakeswapWorkerAddress, BMONBNBPancakeswapWorkerStrategies, BMONBNBPancakeswapWorkerConfig, ETHBTCBPancakeswapWorkerAddress, ETHBTCBPancakeswapWorkerStrategies, ETHBTCBPancakeswapWorkerConfig, BTCBETHPancakeswapWorkerAddress, BTCBETHPancakeswapWorkerStrategies, BTCBETHPancakeswapWorkerConfig, SPSBNBPancakeswapWorkerAddress, SPSBNBPancakeswapWorkerStrategies, SPSBNBPancakeswapWorkerConfig, ETERNALBNBPancakeswapWorkerAddress, ETERNALBNBPancakeswapWorkerStrategies, ETERNALBNBPancakeswapWorkerConfig, THGBNBPancakeswapWorkerAddress, THGBNBPancakeswapWorkerStrategies, THGBNBPancakeswapWorkerConfig, ETHUSDCPancakeswapWorkerAddress, ETHUSDCPancakeswapWorkerStrategies, ETHUSDCPancakeswapWorkerConfig, USDCETHPancakeswapWorkerAddress, USDCETHPancakeswapWorkerStrategies, USDCETHPancakeswapWorkerConfig, USDCPancakeswapCakeMaxiWorkerAddress, USDCPancakeswapCakeMaxiWorkerStrategies, USDCPancakeswapCakeMaxiWorkerConfig, USDTUSDCPancakeswapWorkerAddress, USDTUSDCPancakeswapWorkerStrategies, USDTUSDCPancakeswapWorkerConfig, } from './contracts';
import { compare } from '../utils/address';
import { appConfig } from './appConfig';
function parseStrategyAddress(strategies) {
    return {
        strategyAddTwoSidesOptimalAddress: strategies.StrategyAddTwoSidesOptimal,
        strategyAddAllBaseTokenAddress: strategies.StrategyAddAllBaseToken,
        strategyLiquidateAddress: strategies.StrategyLiquidate,
        strategyWithdrawMinimizeTrading: strategies.StrategyWithdrawMinimizeTrading,
        strategyPartialCloseLiquidate: strategies.StrategyPartialCloseLiquidate,
        strategyPartialCloseMinimizeTrading: strategies.StrategyPartialCloseMinimizeTrading,
    };
}
const pancakeSwapWorkers = appConfig.ActiveFarms.PancakeSwap.workers;
const waultSwapWorkers = appConfig.ActiveFarms.WaultSwap.workers;
const mdexSwapWorkers = appConfig.ActiveFarms.MdexSwap.workers;
const pancakeLpWorkers = [
    // BNB
    {
        key: 'pcs-cake-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['cake'],
        },
        active: pancakeSwapWorkers.CAKE_BNB.activeWorker,
        address: CAKEBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(CAKEBNBPancakeswapWorkerStrategies),
        workerConfigAddress: CAKEBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-btcb-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['btcb'],
        },
        active: pancakeSwapWorkers.BTCB_BNB.activeWorker,
        address: BTCBBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BTCBBNBPancakeswapWorkerStrategies),
        workerConfigAddress: BTCBBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-eth-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['eth'],
        },
        active: pancakeSwapWorkers.ETH_BNB.activeWorker,
        address: ETHBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(ETHBNBPancakeswapWorkerStrategies),
        workerConfigAddress: ETHBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-dot-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['dot'],
        },
        active: pancakeSwapWorkers.DOT_BNB.activeWorker,
        address: DOTBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(DOTBNBPancakeswapWorkerStrategies),
        workerConfigAddress: DOTBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-uni-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['uni'],
        },
        active: pancakeSwapWorkers.UNI_BNB.activeWorker,
        address: UNIBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(UNIBNBPancakeswapWorkerStrategies),
        workerConfigAddress: UNIBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-link-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['link'],
        },
        active: pancakeSwapWorkers.LINK_BNB.activeWorker,
        address: LINKBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(LINKBNBPancakeswapWorkerStrategies),
        workerConfigAddress: LINKBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-xvs-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['xvs'],
        },
        active: pancakeSwapWorkers.XVS_BNB.activeWorker,
        address: XVSBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(XVSBNBPancakeswapWorkerStrategies),
        workerConfigAddress: XVSBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-yfi-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['yfi'],
        },
        active: pancakeSwapWorkers.YFI_BNB.activeWorker,
        address: YFIBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(YFIBNBPancakeswapWorkerStrategies),
        workerConfigAddress: YFIBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-itam-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['itam'],
        },
        active: pancakeSwapWorkers.ITAM_BNB.activeWorker,
        address: ITAMBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(ITAMBNBPancakeswapWorkerStrategies),
        workerConfigAddress: ITAMBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-bmxx-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['bmxx'],
        },
        active: pancakeSwapWorkers.BMXX_BNB.activeWorker,
        address: BMXXBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BMXXBNBPancakeswapWorkerStrategies),
        workerConfigAddress: BMXXBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-belt-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['belt'],
        },
        active: pancakeSwapWorkers.BELT_BNB.activeWorker,
        address: BELTBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BELTBNBPancakeswapWorkerStrategies),
        workerConfigAddress: BELTBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-bor-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['bor'],
        },
        active: pancakeSwapWorkers.BOR_BNB.activeWorker,
        address: BORBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BORBNBPancakeswapWorkerStrategies),
        workerConfigAddress: BORBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-bry-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['bry'],
        },
        active: pancakeSwapWorkers.BRY_BNB.activeWorker,
        address: BRYBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BRYBNBPancakeswapWorkerStrategies),
        workerConfigAddress: BRYBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-cws-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['cws'],
        },
        active: pancakeSwapWorkers.CWS_BNB.activeWorker,
        address: PCWSBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(PCWSBNBPancakeswapWorkerStrategies),
        workerConfigAddress: PCWSBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-swingby-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['swingby'],
        },
        active: pancakeSwapWorkers.SWINGBY_BNB.activeWorker,
        address: SWINGBYBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(SWINGBYBNBPancakeswapWorkerStrategies),
        workerConfigAddress: SWINGBYBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-dodo-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['dodo'],
        },
        active: pancakeSwapWorkers.DODO_BNB.activeWorker,
        address: DODOBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(DODOBNBPancakeswapWorkerStrategies),
        workerConfigAddress: DODOBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-busd-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['busd'],
        },
        active: pancakeSwapWorkers.BUSD_BNB.activeWorker,
        address: BUSDBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BUSDBNBPancakeswapWorkerStrategies),
        workerConfigAddress: BUSDBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-usdt-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['usdt'],
        },
        active: pancakeSwapWorkers.USDT_BNB.activeWorker,
        address: USDTBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(USDTBNBPancakeswapWorkerStrategies),
        workerConfigAddress: USDTBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-oddz-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['oddz'],
        },
        active: pancakeSwapWorkers.ODDZ_BNB.activeWorker,
        address: ODDZBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(ODDZBNBPancakeswapWorkerStrategies),
        workerConfigAddress: ODDZBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-ada-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['ada'],
        },
        active: pancakeSwapWorkers.ADA_BNB.activeWorker,
        address: ADABNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(ADABNBPancakeswapWorkerStrategies),
        workerConfigAddress: ADABNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-trx-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['trx'],
        },
        active: pancakeSwapWorkers.TRX_BNB.activeWorker,
        address: TRXBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(TRXBNBPancakeswapWorkerStrategies),
        workerConfigAddress: TRXBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-btt-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['btt'],
        },
        active: pancakeSwapWorkers.BTT_BNB.activeWorker,
        address: BTTBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BTTBNBPancakeswapWorkerStrategies),
        workerConfigAddress: BTTBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-axs-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['axs'],
        },
        active: pancakeSwapWorkers.AXS_BNB.activeWorker,
        address: AXSBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(AXSBNBPancakeswapWorkerStrategies),
        workerConfigAddress: AXSBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-mbox-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['mbox'],
        },
        active: pancakeSwapWorkers.MBOX_BNB.activeWorker,
        address: MBOXBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(MBOXBNBPancakeswapWorkerStrategies),
        workerConfigAddress: MBOXBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-naos-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['naos'],
        },
        active: pancakeSwapWorkers.NAOS_BNB.activeWorker,
        address: NAOSBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(NAOSBNBPancakeswapWorkerStrategies),
        workerConfigAddress: NAOSBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-dvi-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['dvi'],
        },
        active: pancakeSwapWorkers.DVI_BNB.activeWorker,
        address: DVIBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(DVIBNBPancakeswapWorkerStrategies),
        workerConfigAddress: DVIBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-qbt-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['qbt'],
        },
        active: pancakeSwapWorkers.QBT_BNB.activeWorker,
        address: QBTBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(QBTBNBPancakeswapWorkerStrategies),
        workerConfigAddress: QBTBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-bmon-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['bmon'],
        },
        active: pancakeSwapWorkers.BMON_BNB.activeWorker,
        address: BMONBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BMONBNBPancakeswapWorkerStrategies),
        workerConfigAddress: BMONBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-sps-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['sps'],
        },
        active: pancakeSwapWorkers.SPS_BNB.activeWorker,
        address: SPSBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(SPSBNBPancakeswapWorkerStrategies),
        workerConfigAddress: SPSBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-eternal-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['eternal'],
        },
        active: pancakeSwapWorkers.ETERNAL_BNB.activeWorker,
        address: ETERNALBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(ETERNALBNBPancakeswapWorkerStrategies),
        workerConfigAddress: ETERNALBNBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-thg-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['thg'],
        },
        active: pancakeSwapWorkers.THG_BNB.activeWorker,
        address: THGBNBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(THGBNBPancakeswapWorkerStrategies),
        workerConfigAddress: THGBNBPancakeswapWorkerConfig,
    },
    // BUSD
    {
        key: 'pcs-btcb-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['btcb'],
        },
        active: pancakeSwapWorkers.BTCB_BUSD.activeWorker,
        address: BTCBBUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BTCBBUSDPancakeswapWorkerStrategies),
        workerConfigAddress: BTCBBUSDPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-usdt-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['usdt'],
        },
        active: pancakeSwapWorkers.USDT_BUSD.activeWorker,
        address: USDTBUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(USDTBUSDPancakeswapWorkerStrategies),
        workerConfigAddress: USDTBUSDPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-bnb-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['bnb'],
        },
        active: pancakeSwapWorkers.BNB_BUSD.activeWorker,
        address: BNBBUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BNBBUSDPancakeswapWorkerStrategies),
        workerConfigAddress: BNBBUSDPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-vai-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['vai'],
        },
        active: pancakeSwapWorkers.VAI_BUSD.activeWorker,
        address: VAIBUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(VAIBUSDPancakeswapWorkerStrategies),
        workerConfigAddress: VAIBUSDPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-usdc-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['usdc'],
        },
        active: pancakeSwapWorkers.USDC_BUSD.activeWorker,
        address: USDCBUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(USDCBUSDPancakeswapWorkerStrategies),
        workerConfigAddress: USDCBUSDPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-dai-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['dai'],
        },
        active: pancakeSwapWorkers.DAI_BUSD.activeWorker,
        address: DAIBUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(DAIBUSDPancakeswapWorkerStrategies),
        workerConfigAddress: DAIBUSDPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-ust-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['ust'],
        },
        active: pancakeSwapWorkers.UST_BUSD.activeWorker,
        address: USTBUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(USTBUSDPancakeswapWorkerStrategies),
        workerConfigAddress: USTBUSDPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-alpaca-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['alpaca'],
        },
        active: pancakeSwapWorkers.ALPACA_BUSD.activeWorker,
        address: ALPACABUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(ALPACABUSDPancakeswapWorkerStrategies),
        workerConfigAddress: ALPACABUSDPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-cake-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['cake'],
        },
        active: pancakeSwapWorkers.CAKE_BUSD.activeWorker,
        address: CAKEBUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(CAKEBUSDPancakeswapWorkerStrategies),
        workerConfigAddress: CAKEBUSDPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-form-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['form'],
        },
        active: pancakeSwapWorkers.FORM_BUSD.activeWorker,
        address: FORMBUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(FORMBUSDPancakeswapWorkerStrategies),
        workerConfigAddress: FORMBUSDPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-tusd-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['tusd'],
        },
        active: pancakeSwapWorkers.TUSD_BUSD.activeWorker,
        address: TUSDBUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(TUSDBUSDPancakeswapWorkerStrategies),
        workerConfigAddress: TUSDBUSDPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-orbs-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['orbs'],
        },
        active: pancakeSwapWorkers.ORBS_BUSD.activeWorker,
        address: ORBSBUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(ORBSBUSDPancakeswapWorkerStrategies),
        workerConfigAddress: ORBSBUSDPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-trx-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['trx'],
        },
        active: pancakeSwapWorkers.TRX_BUSD.activeWorker,
        address: TRXBUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(TRXBUSDPancakeswapWorkerStrategies),
        workerConfigAddress: TRXBUSDPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-btt-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['btt'],
        },
        active: pancakeSwapWorkers.BTT_BUSD.activeWorker,
        address: BTTBUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BTTBUSDPancakeswapWorkerStrategies),
        workerConfigAddress: BTTBUSDPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-pmon-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['pmon'],
        },
        active: pancakeSwapWorkers.PMON_BUSD.activeWorker,
        address: PMONBUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(PMONBUSDPancakeswapWorkerStrategies),
        workerConfigAddress: PMONBUSDPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-pha-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['pha'],
        },
        active: pancakeSwapWorkers.PHA_BUSD.activeWorker,
        address: PHABUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(PHABUSDPancakeswapWorkerStrategies),
        workerConfigAddress: PHABUSDPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-pots-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['pots'],
        },
        active: pancakeSwapWorkers.POTS_BUSD.activeWorker,
        address: POTSBUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(POTSBUSDPancakeswapWorkerStrategies),
        workerConfigAddress: POTSBUSDPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-bmon-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['bmon'],
        },
        active: pancakeSwapWorkers.BMON_BUSD.activeWorker,
        address: BMONBUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BMONBUSDPancakeswapWorkerStrategies),
        workerConfigAddress: BMONBUSDPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-high-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['high'],
        },
        active: pancakeSwapWorkers.HIGH_BUSD.activeWorker,
        address: HIGHBUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(HIGHBUSDPancakeswapWorkerStrategies),
        workerConfigAddress: HIGHBUSDPancakeswapWorkerConfig,
    },
    // ETH
    {
        key: 'pcs-beth-eth',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['eth'],
            farmingToken: mapTokenProfiles['beth'],
        },
        active: pancakeSwapWorkers.BETH_ETH.activeWorker,
        address: BETHETHPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BETHETHPancakeswapWorkerStrategies),
        workerConfigAddress: BETHETHPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-comp-eth',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['eth'],
            farmingToken: mapTokenProfiles['comp'],
        },
        active: pancakeSwapWorkers.COMP_ETH.activeWorker,
        address: COMPETHPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(COMPETHPancakeswapWorkerStrategies),
        workerConfigAddress: COMPETHPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-sushi-eth',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['eth'],
            farmingToken: mapTokenProfiles['sushi'],
        },
        active: pancakeSwapWorkers.SUSHI_ETH.activeWorker,
        address: SUSHIETHPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(SUSHIETHPancakeswapWorkerStrategies),
        workerConfigAddress: SUSHIETHPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-bnb-eth',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['eth'],
            farmingToken: mapTokenProfiles['bnb'],
        },
        active: pancakeSwapWorkers.BNB_ETH.activeWorker,
        address: BNBETHPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BNBETHPancakeswapWorkerStrategies),
        workerConfigAddress: BNBETHPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-btcb-eth',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['eth'],
            farmingToken: mapTokenProfiles['btcb'],
        },
        active: pancakeSwapWorkers.BTCB_ETH.activeWorker,
        address: BTCBETHPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BTCBETHPancakeswapWorkerStrategies),
        workerConfigAddress: BTCBETHPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-usdc-eth',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['eth'],
            farmingToken: mapTokenProfiles['usdc'],
        },
        active: pancakeSwapWorkers.USDC_ETH.activeWorker,
        address: USDCETHPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(USDCETHPancakeswapWorkerStrategies),
        workerConfigAddress: USDCETHPancakeswapWorkerConfig,
    },
    // ALPACA
    {
        key: 'pcs-busd-alpaca',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['alpaca'],
            farmingToken: mapTokenProfiles['busd'],
        },
        active: pancakeSwapWorkers.BUSD_ALPACA.activeWorker,
        address: BUSDALPACAPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BUSDALPACAPancakeswapWorkerStrategies),
        workerConfigAddress: BUSDALPACAPancakeswapWorkerConfig,
    },
    // USDT
    {
        key: 'pcs-bnb-usdt',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['usdt'],
            farmingToken: mapTokenProfiles['bnb'],
        },
        active: pancakeSwapWorkers.BNB_USDT.activeWorker,
        address: BNBUSDTPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BNBUSDTPancakeswapWorkerStrategies),
        workerConfigAddress: BNBUSDTPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-busd-usdt',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['usdt'],
            farmingToken: mapTokenProfiles['busd'],
        },
        active: pancakeSwapWorkers.BUSD_USDT.activeWorker,
        address: BUSDUSDTPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BUSDUSDTPancakeswapWorkerStrategies),
        workerConfigAddress: BUSDUSDTPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-cake-usdt',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['usdt'],
            farmingToken: mapTokenProfiles['cake'],
        },
        active: pancakeSwapWorkers.CAKE_USDT.activeWorker,
        address: CAKEUSDTPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(CAKEUSDTPancakeswapWorkerStrategies),
        workerConfigAddress: CAKEUSDTPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-usdc-usdt',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['usdt'],
            farmingToken: mapTokenProfiles['usdc'],
        },
        active: pancakeSwapWorkers.USDC_USDT.activeWorker,
        address: USDCUSDTPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(USDCUSDTPancakeswapWorkerStrategies),
        workerConfigAddress: USDCUSDTPancakeswapWorkerConfig,
    },
    // BTCB
    {
        key: 'pcs-bnb-btcb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['btcb'],
            farmingToken: mapTokenProfiles['bnb'],
        },
        active: pancakeSwapWorkers.BNB_BTCB.activeWorker,
        address: BNBBTCBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BNBBTCBPancakeswapWorkerStrategies),
        workerConfigAddress: BNBBTCBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-busd-btcb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['btcb'],
            farmingToken: mapTokenProfiles['busd'],
        },
        active: pancakeSwapWorkers.BUSD_BTCB.activeWorker,
        address: BUSDBTCBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BUSDBTCBPancakeswapWorkerStrategies),
        workerConfigAddress: BUSDBTCBPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-eth-btcb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['btcb'],
            farmingToken: mapTokenProfiles['eth'],
        },
        active: pancakeSwapWorkers.ETH_BTCB.activeWorker,
        address: ETHBTCBPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(ETHBTCBPancakeswapWorkerStrategies),
        workerConfigAddress: ETHBTCBPancakeswapWorkerConfig,
    },
    // TUSD
    {
        key: 'pcs-busd-tusd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['tusd'],
            farmingToken: mapTokenProfiles['busd'],
        },
        active: pancakeSwapWorkers.BUSD_TUSD.activeWorker,
        address: BUSDTUSDPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BUSDTUSDPancakeswapWorkerStrategies),
        workerConfigAddress: BUSDTUSDPancakeswapWorkerConfig,
    },
    // USDC
    {
        key: 'pcs-eth-usdc',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['usdc'],
            farmingToken: mapTokenProfiles['eth'],
        },
        active: pancakeSwapWorkers.ETH_USDC.activeWorker,
        address: ETHUSDCPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(ETHUSDCPancakeswapWorkerStrategies),
        workerConfigAddress: ETHUSDCPancakeswapWorkerConfig,
    },
    {
        key: 'pcs-usdt-usdc',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['usdc'],
            farmingToken: mapTokenProfiles['usdt'],
        },
        active: pancakeSwapWorkers.USDT_USDC.activeWorker,
        address: USDTUSDCPancakeswapWorkerAddress,
        strategyAddress: parseStrategyAddress(USDTUSDCPancakeswapWorkerStrategies),
        workerConfigAddress: USDTUSDCPancakeswapWorkerConfig,
    },
];
const waultlpWorkers = [
    // BNB
    {
        key: 'ws-wex-bnb',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['wex'],
        },
        active: waultSwapWorkers.WEX_BNB.activeWorker,
        address: WEXBNBWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(WEXBNBWaultswapWorkerStrategies),
        workerConfigAddress: WEXBNBWaultswapWorkerConfig,
    },
    {
        key: 'ws-busd-bnb',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['busd'],
        },
        active: waultSwapWorkers.BUSD_BNB.activeWorker,
        address: BUSDBNBWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BUSDBNBWaultswapWorkerStrategies),
        workerConfigAddress: BUSDBNBWaultswapWorkerConfig,
    },
    {
        key: 'ws-alpaca-bnb',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['alpaca'],
        },
        active: waultSwapWorkers.ALPACA_BNB.activeWorker,
        address: ALPACABNBWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(ALPACABNBWaultswapWorkerStrategies),
        workerConfigAddress: ALPACABNBWaultswapWorkerConfig,
    },
    {
        key: 'ws-waultx-bnb',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['waultx'],
        },
        active: waultSwapWorkers.WAULTX_BNB.activeWorker,
        address: WAULTXBNBWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(WAULTXBNBWaultswapWorkerStrategies),
        workerConfigAddress: WAULTXBNBWaultswapWorkerConfig,
    },
    // BUSD
    {
        key: 'ws-eth-busd',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['eth'],
        },
        active: waultSwapWorkers.ETH_BUSD.activeWorker,
        address: ETHBUSDWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(ETHBUSDWaultswapWorkerStrategies),
        workerConfigAddress: ETHBUSDWaultswapWorkerConfig,
    },
    {
        key: 'ws-bnb-busd',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['bnb'],
        },
        active: waultSwapWorkers.BNB_BUSD.activeWorker,
        address: BNBBUSDWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BNBBUSDWaultswapWorkerStrategies),
        workerConfigAddress: BNBBUSDWaultswapWorkerConfig,
    },
    {
        key: 'ws-usdt-busd',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['usdt'],
        },
        active: waultSwapWorkers.USDT_BUSD.activeWorker,
        address: USDTBUSDWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(USDTBUSDWaultswapWorkerStrategies),
        workerConfigAddress: USDTBUSDWaultswapWorkerConfig,
    },
    {
        key: 'ws-btcb-busd',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['btcb'],
        },
        active: waultSwapWorkers.BTCB_BUSD.activeWorker,
        address: BTCBBUSDWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BTCBBUSDWaultswapWorkerStrategies),
        workerConfigAddress: BTCBBUSDWaultswapWorkerConfig,
    },
    {
        key: 'ws-wusd-busd',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['wusd'],
        },
        active: waultSwapWorkers.WUSD_BUSD.activeWorker,
        address: WUSDBUSDWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(WUSDBUSDWaultswapWorkerStrategies),
        workerConfigAddress: WUSDBUSDWaultswapWorkerConfig,
    },
    // ETH
    {
        key: 'ws-busd-eth',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['eth'],
            farmingToken: mapTokenProfiles['busd'],
        },
        active: waultSwapWorkers.BUSD_ETH.activeWorker,
        address: BUSDETHWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BUSDETHWaultswapWorkerStrategies),
        workerConfigAddress: BUSDETHWaultswapWorkerConfig,
    },
    {
        key: 'ws-btcb-eth',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['eth'],
            farmingToken: mapTokenProfiles['btcb'],
        },
        active: waultSwapWorkers.BTCB_ETH.activeWorker,
        address: BTCBETHWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BTCBETHWaultswapWorkerStrategies),
        workerConfigAddress: BTCBETHWaultswapWorkerConfig,
    },
    {
        key: 'ws-beth-eth',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['eth'],
            farmingToken: mapTokenProfiles['beth'],
        },
        active: waultSwapWorkers.BETH_ETH.activeWorker,
        address: BETHETHWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BETHETHWaultswapWorkerStrategies),
        workerConfigAddress: BETHETHWaultswapWorkerConfig,
    },
    {
        key: 'ws-usdt-eth',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['eth'],
            farmingToken: mapTokenProfiles['usdt'],
        },
        active: waultSwapWorkers.USDT_ETH.activeWorker,
        address: USDTETHWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(USDTETHWaultswapWorkerStrategies),
        workerConfigAddress: USDTETHWaultswapWorkerConfig,
    },
    // ALPACA
    {
        key: 'ws-usdt-alpaca',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['alpaca'],
            farmingToken: mapTokenProfiles['usdt'],
        },
        active: waultSwapWorkers.USDT_ALPACA.activeWorker,
        address: USDTALPACAWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(USDTALPACAWaultswapWorkerStrategies),
        workerConfigAddress: USDTALPACAWaultswapWorkerConfig,
    },
    {
        key: 'ws-bnb-alpaca',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['alpaca'],
            farmingToken: mapTokenProfiles['bnb'],
        },
        active: waultSwapWorkers.BNB_ALPACA.activeWorker,
        address: BNBALPACAWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BNBALPACAWaultswapWorkerStrategies),
        workerConfigAddress: BNBALPACAWaultswapWorkerConfig,
    },
    // USDT
    {
        key: 'ws-alpaca-usdt',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['usdt'],
            farmingToken: mapTokenProfiles['alpaca'],
        },
        active: waultSwapWorkers.ALPACA_USDT.activeWorker,
        address: ALPACAUSDTWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(ALPACAUSDTWaultswapWorkerStrategies),
        workerConfigAddress: ALPACAUSDTWaultswapWorkerConfig,
    },
    {
        key: 'ws-wex-usdt',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['usdt'],
            farmingToken: mapTokenProfiles['wex'],
        },
        active: waultSwapWorkers.WEX_USDT.activeWorker,
        address: WEXUSDTWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(WEXUSDTWaultswapWorkerStrategies),
        workerConfigAddress: WEXUSDTWaultswapWorkerConfig,
    },
    {
        key: 'ws-busd-usdt',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['usdt'],
            farmingToken: mapTokenProfiles['busd'],
        },
        active: waultSwapWorkers.BUSD_USDT.activeWorker,
        address: BUSDUSDTWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BUSDUSDTWaultswapWorkerStrategies),
        workerConfigAddress: BUSDUSDTWaultswapWorkerConfig,
    },
    {
        key: 'ws-btcb-usdt',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['usdt'],
            farmingToken: mapTokenProfiles['btcb'],
        },
        active: waultSwapWorkers.BTCB_USDT.activeWorker,
        address: BTCBUSDTWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BTCBUSDTWaultswapWorkerStrategies),
        workerConfigAddress: BTCBUSDTWaultswapWorkerConfig,
    },
    {
        key: 'ws-eth-usdt',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['usdt'],
            farmingToken: mapTokenProfiles['eth'],
        },
        active: waultSwapWorkers.ETH_USDT.activeWorker,
        address: ETHUSDTWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(ETHUSDTWaultswapWorkerStrategies),
        workerConfigAddress: ETHUSDTWaultswapWorkerConfig,
    },
    {
        key: 'ws-matic-usdt',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['usdt'],
            farmingToken: mapTokenProfiles['matic'],
        },
        active: waultSwapWorkers.MATIC_USDT.activeWorker,
        address: MATICUSDTWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(MATICUSDTWaultswapWorkerStrategies),
        workerConfigAddress: MATICUSDTWaultswapWorkerConfig,
    },
    {
        key: 'ws-tusd-usdt',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['usdt'],
            farmingToken: mapTokenProfiles['tusd'],
        },
        active: waultSwapWorkers.TUSD_USDT.activeWorker,
        address: TUSDUSDTWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(TUSDUSDTWaultswapWorkerStrategies),
        workerConfigAddress: TUSDUSDTWaultswapWorkerConfig,
    },
    // BTCB
    {
        key: 'ws-eth-btcb',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['btcb'],
            farmingToken: mapTokenProfiles['eth'],
        },
        active: waultSwapWorkers.ETH_BTCB.activeWorker,
        address: ETHBTCBWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(ETHBTCBWaultswapWorkerStrategies),
        workerConfigAddress: ETHBTCBWaultswapWorkerConfig,
    },
    {
        key: 'ws-usdt-btcb',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['btcb'],
            farmingToken: mapTokenProfiles['usdt'],
        },
        active: waultSwapWorkers.USDT_BTCB.activeWorker,
        address: USDTBTCBWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(USDTBTCBWaultswapWorkerStrategies),
        workerConfigAddress: USDTBTCBWaultswapWorkerConfig,
    },
    {
        key: 'ws-busd-btcb',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['btcb'],
            farmingToken: mapTokenProfiles['busd'],
        },
        active: waultSwapWorkers.BUSD_BTCB.activeWorker,
        address: BUSDBTCBWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(BUSDBTCBWaultswapWorkerStrategies),
        workerConfigAddress: BUSDBTCBWaultswapWorkerConfig,
    },
    // TUSD
    {
        key: 'ws-usdt-tusd',
        dex: WaultSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['tusd'],
            farmingToken: mapTokenProfiles['usdt'],
        },
        active: waultSwapWorkers.USDT_TUSD.activeWorker,
        address: USDTTUSDWaultswapWorkerAddress,
        strategyAddress: parseStrategyAddress(USDTTUSDWaultswapWorkerStrategies),
        workerConfigAddress: USDTTUSDWaultswapWorkerConfig,
    },
];
const pancakeSingleAssetWorkers = [
    {
        key: 'pcs-cakemaxi-eth',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles.eth,
            farmingToken: mapTokenProfiles.cake,
        },
        active: pancakeSwapWorkers.CAKEMAXI_ETH.activeWorker,
        address: ETHPancakeswapCakeMaxiWorkerAddress,
        strategyAddress: parseStrategyAddress(ETHPancakeswapCakeMaxiWorkerStrategies),
        workerConfigAddress: ETHPancakeswapCakeMaxiWorkerConfig,
        lpRoute: {
            token0: mapTokenProfiles.cake,
            token1: mapTokenProfiles.eth,
            path: [mapTokenProfiles.eth, mapTokenProfiles.bnb, mapTokenProfiles.cake],
        },
    },
    {
        key: 'pcs-cakemaxi-usdt',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles.usdt,
            farmingToken: mapTokenProfiles.cake,
        },
        active: pancakeSwapWorkers.CAKEMAXI_USDT.activeWorker,
        address: USDTPancakeswapCakeMaxiWorkerAddress,
        strategyAddress: parseStrategyAddress(USDTPancakeswapCakeMaxiWorkerStrategies),
        workerConfigAddress: USDTPancakeswapCakeMaxiWorkerConfig,
        lpRoute: {
            token0: mapTokenProfiles.cake,
            token1: mapTokenProfiles.usdt,
            path: [mapTokenProfiles.usdt, mapTokenProfiles.cake],
        },
    },
    {
        key: 'pcs-cakemaxi-bnb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles.bnb,
            farmingToken: mapTokenProfiles.cake,
        },
        active: pancakeSwapWorkers.CAKEMAXI_BNB.activeWorker,
        address: BNBPancakeswapCakeMaxiWorkerAddress,
        strategyAddress: parseStrategyAddress(BNBPancakeswapCakeMaxiWorkerStrategies),
        workerConfigAddress: BNBPancakeswapCakeMaxiWorkerConfig,
        lpRoute: {
            token0: mapTokenProfiles.cake,
            token1: mapTokenProfiles.bnb,
            path: [mapTokenProfiles.bnb, mapTokenProfiles.cake],
        },
    },
    {
        key: 'pcs-cakemaxi-busd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles.busd,
            farmingToken: mapTokenProfiles.cake,
        },
        active: pancakeSwapWorkers.CAKEMAXI_BUSD.activeWorker,
        address: BUSDPancakeswapCakeMaxiWorkerAddress,
        strategyAddress: parseStrategyAddress(BUSDPancakeswapCakeMaxiWorkerStrategies),
        workerConfigAddress: BUSDPancakeswapCakeMaxiWorkerConfig,
        lpRoute: {
            token0: mapTokenProfiles.cake,
            token1: mapTokenProfiles.busd,
            path: [mapTokenProfiles.busd, mapTokenProfiles.cake],
        },
    },
    {
        key: 'pcs-cakemaxi-btcb',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles.btcb,
            farmingToken: mapTokenProfiles.cake,
        },
        active: pancakeSwapWorkers.CAKEMAXI_BTCB.activeWorker,
        address: BTCBPancakeswapCakeMaxiWorkerAddress,
        strategyAddress: parseStrategyAddress(BTCBPancakeswapCakeMaxiWorkerStrategies),
        workerConfigAddress: BTCBPancakeswapCakeMaxiWorkerConfig,
        lpRoute: {
            token0: mapTokenProfiles.cake,
            token1: mapTokenProfiles.btcb,
            path: [mapTokenProfiles.btcb, mapTokenProfiles.bnb, mapTokenProfiles.cake],
        },
    },
    {
        key: 'pcs-cakemaxi-tusd',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles.tusd,
            farmingToken: mapTokenProfiles.cake,
        },
        active: pancakeSwapWorkers.CAKEMAXI_TUSD.activeWorker,
        address: TUSDPancakeswapCakeMaxiWorkerAddress,
        strategyAddress: parseStrategyAddress(TUSDPancakeswapCakeMaxiWorkerStrategies),
        workerConfigAddress: TUSDPancakeswapCakeMaxiWorkerConfig,
        lpRoute: {
            token0: mapTokenProfiles.cake,
            token1: mapTokenProfiles.tusd,
            path: [mapTokenProfiles.tusd, mapTokenProfiles.busd, mapTokenProfiles.cake],
        },
    },
    {
        key: 'pcs-cakemaxi-usdc',
        dex: PancakeSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles.usdc,
            farmingToken: mapTokenProfiles.cake,
        },
        active: pancakeSwapWorkers.CAKEMAXI_USDC.activeWorker,
        address: USDCPancakeswapCakeMaxiWorkerAddress,
        strategyAddress: parseStrategyAddress(USDCPancakeswapCakeMaxiWorkerStrategies),
        workerConfigAddress: USDCPancakeswapCakeMaxiWorkerConfig,
        lpRoute: {
            token0: mapTokenProfiles.cake,
            token1: mapTokenProfiles.usdc,
            path: [mapTokenProfiles.usdc, mapTokenProfiles.busd, mapTokenProfiles.cake],
        },
    },
];
const mdexLpWorkers = [
    // USDT
    {
        key: 'ms-btcb-usdt',
        dex: MdexSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['usdt'],
            farmingToken: mapTokenProfiles['btcb'],
        },
        active: mdexSwapWorkers.BTCB_USDT.activeWorker,
        address: BTCBUSDTMdexWorkerAddress,
        strategyAddress: parseStrategyAddress(BTCBUSDTMdexWorkerStrategies),
        workerConfigAddress: BTCBUSDTMdexWorkerConfig,
    },
    {
        key: 'ms-eth-usdt',
        dex: MdexSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['usdt'],
            farmingToken: mapTokenProfiles['eth'],
        },
        active: mdexSwapWorkers.ETH_USDT.activeWorker,
        address: ETHUSDTMdexWorkerAddress,
        strategyAddress: parseStrategyAddress(ETHUSDTMdexWorkerStrategies),
        workerConfigAddress: ETHUSDTMdexWorkerConfig,
    },
    {
        key: 'ms-bnb-usdt',
        dex: MdexSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['usdt'],
            farmingToken: mapTokenProfiles['bnb'],
        },
        active: mdexSwapWorkers.BNB_USDT.activeWorker,
        address: WBNBUSDTMdexWorkerAddress,
        strategyAddress: parseStrategyAddress(WBNBUSDTMdexWorkerStrategies),
        workerConfigAddress: WBNBUSDTMdexWorkerConfig,
    },
    {
        key: 'ms-usdc-usdt',
        dex: MdexSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['usdt'],
            farmingToken: mapTokenProfiles['usdc'],
        },
        active: mdexSwapWorkers.USDC_USDT.activeWorker,
        address: USDCUSDTMdexWorkerAddress,
        strategyAddress: parseStrategyAddress(USDCUSDTMdexWorkerStrategies),
        workerConfigAddress: USDCUSDTMdexWorkerConfig,
    },
    {
        key: 'ms-dai-usdt',
        dex: MdexSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['usdt'],
            farmingToken: mapTokenProfiles['dai'],
        },
        active: mdexSwapWorkers.DAI_USDT.activeWorker,
        address: DAIUSDTMdexWorkerAddress,
        strategyAddress: parseStrategyAddress(DAIUSDTMdexWorkerStrategies),
        workerConfigAddress: DAIUSDTMdexWorkerConfig,
    },
    // BTCB
    {
        key: 'ms-usdt-btcb',
        dex: MdexSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['btcb'],
            farmingToken: mapTokenProfiles['usdt'],
        },
        active: mdexSwapWorkers.USDT_BTCB.activeWorker,
        address: USDTBTCBMdexWorkerAddress,
        strategyAddress: parseStrategyAddress(USDTBTCBMdexWorkerStrategies),
        workerConfigAddress: USDTBTCBMdexWorkerConfig,
    },
    {
        key: 'ms-eth-btcb',
        dex: MdexSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['btcb'],
            farmingToken: mapTokenProfiles['eth'],
        },
        active: mdexSwapWorkers.ETH_BTCB.activeWorker,
        address: ETHBTCBMdexWorkerAddress,
        strategyAddress: parseStrategyAddress(ETHBTCBMdexWorkerStrategies),
        workerConfigAddress: ETHBTCBMdexWorkerConfig,
    },
    {
        key: 'ms-bnb-btcb',
        dex: MdexSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['btcb'],
            farmingToken: mapTokenProfiles['bnb'],
        },
        active: mdexSwapWorkers.BNB_BTCB.activeWorker,
        address: WBNBBTCBMdexWorkerAddress,
        strategyAddress: parseStrategyAddress(WBNBBTCBMdexWorkerStrategies),
        workerConfigAddress: WBNBBTCBMdexWorkerConfig,
    },
    // ETH
    {
        key: 'ms-usdt-eth',
        dex: MdexSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['eth'],
            farmingToken: mapTokenProfiles['usdt'],
        },
        active: mdexSwapWorkers.USDT_ETH.activeWorker,
        address: USDTETHMdexWorkerAddress,
        strategyAddress: parseStrategyAddress(USDTETHMdexWorkerStrategies),
        workerConfigAddress: USDTETHMdexWorkerConfig,
    },
    {
        key: 'ms-bnb-eth',
        dex: MdexSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['eth'],
            farmingToken: mapTokenProfiles['bnb'],
        },
        active: mdexSwapWorkers.BNB_ETH.activeWorker,
        address: WBNBETHMdexWorkerAddress,
        strategyAddress: parseStrategyAddress(WBNBETHMdexWorkerStrategies),
        workerConfigAddress: WBNBETHMdexWorkerConfig,
    },
    {
        key: 'ms-btcb-eth',
        dex: MdexSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['eth'],
            farmingToken: mapTokenProfiles['btcb'],
        },
        active: mdexSwapWorkers.BTCB_ETH.activeWorker,
        address: BTCBETHMdexWorkerAddress,
        strategyAddress: parseStrategyAddress(BTCBETHMdexWorkerStrategies),
        workerConfigAddress: BTCBETHMdexWorkerConfig,
    },
    // BNB
    {
        key: 'ms-mdx-bnb',
        dex: MdexSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['mdx'],
        },
        active: mdexSwapWorkers.MDX_BNB.activeWorker,
        address: MDXBNBMdexWorkerAddress,
        strategyAddress: parseStrategyAddress(MDXBNBMdexworkerStrategies),
        workerConfigAddress: MDXBNBMdexWorkerConfig,
    },
    {
        key: 'ms-usdt-bnb',
        dex: MdexSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['usdt'],
        },
        active: mdexSwapWorkers.USDT_BNB.activeWorker,
        address: USDTWBNBMdexWorkerAddress,
        strategyAddress: parseStrategyAddress(USDTWBNBMdexworkerStrategies),
        workerConfigAddress: USDTWBNBMdexWorkerConfig,
    },
    {
        key: 'ms-eth-bnb',
        dex: MdexSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['eth'],
        },
        active: mdexSwapWorkers.ETH_BNB.activeWorker,
        address: ETHWBNBMdexWorkerAddress,
        strategyAddress: parseStrategyAddress(ETHWBNBMdexworkerStrategies),
        workerConfigAddress: ETHWBNBMdexWorkerConfig,
    },
    {
        key: 'ms-busd-bnb',
        dex: MdexSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['busd'],
        },
        active: mdexSwapWorkers.BUSD_BNB.activeWorker,
        address: BUSDWBNBMdexWorkerAddress,
        strategyAddress: parseStrategyAddress(BUSDWBNBMdexworkerStrategies),
        workerConfigAddress: BUSDWBNBMdexWorkerConfig,
    },
    {
        key: 'ms-btcb-bnb',
        dex: MdexSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['bnb'],
            farmingToken: mapTokenProfiles['btcb'],
        },
        active: mdexSwapWorkers.BTCB_BNB.activeWorker,
        address: BTCBWBNBMdexWorkerAddress,
        strategyAddress: parseStrategyAddress(BTCBWBNBMdexworkerStrategies),
        workerConfigAddress: BTCBWBNBMdexWorkerConfig,
    },
    // BUSD
    {
        key: 'ms-mdx-busd',
        dex: MdexSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['mdx'],
        },
        active: mdexSwapWorkers.MDX_BUSD.activeWorker,
        address: MDXBUSDMdexWorkerAddress,
        strategyAddress: parseStrategyAddress(MDXBUSDMdexWorkerStrategies),
        workerConfigAddress: MDXBUSDMdexWorkerConfig,
    },
    {
        key: 'ms-bnb-busd',
        dex: MdexSwapDex,
        tokenPair: {
            baseToken: mapTokenProfiles['busd'],
            farmingToken: mapTokenProfiles['bnb'],
        },
        active: mdexSwapWorkers.BNB_BUSD.activeWorker,
        address: WBNBBUSDMdexWorkerAddress,
        strategyAddress: parseStrategyAddress(WBNBBUSDMdexWorkerStrategies),
        workerConfigAddress: WBNBBUSDMdexWorkerConfig,
    },
];
const allWorkers = [...pancakeLpWorkers, ...waultlpWorkers, ...pancakeSingleAssetWorkers, ...mdexLpWorkers];
// const allWorkers = [...pancakeLpWorkers, ...waultlpWorkers, ...pancakeSingleAssetWorkers]
// filter out inactive worker
export const workers = allWorkers.filter((o) => o.active);
export const mapWorkers = workers.reduce((accu, worker) => {
    return Object.assign(Object.assign({}, accu), { [worker.key]: worker });
}, {});
export const getWorkerByAddress = (address) => workers.find((eachVault) => compare(eachVault.address, address));
