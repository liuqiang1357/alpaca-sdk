/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IPancakeRouter02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeRouter02__factory>;
    getContractFactory(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlUpgradeable__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "PausableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableUpgradeable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IPancakeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeFactory__factory>;
    getContractFactory(
      name: "IPancakePair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakePair__factory>;
    getContractFactory(
      name: "AlpacaToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AlpacaToken__factory>;
    getContractFactory(
      name: "FairLaunch",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FairLaunch__factory>;
    getContractFactory(
      name: "IFairLaunch",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFairLaunch__factory>;
    getContractFactory(
      name: "IFairLaunchV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFairLaunchV1__factory>;
    getContractFactory(
      name: "Shield",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Shield__factory>;
    getContractFactory(
      name: "FlashLoanReceiverBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashLoanReceiverBase__factory>;
    getContractFactory(
      name: "FlashMintModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashMintModule__factory>;
    getContractFactory(
      name: "IAccessControlConfig",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlConfig__factory>;
    getContractFactory(
      name: "IAlpacaFairLaunch",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAlpacaFairLaunch__factory>;
    getContractFactory(
      name: "IAlpacaOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAlpacaOracle__factory>;
    getContractFactory(
      name: "IAlpacaVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAlpacaVault__factory>;
    getContractFactory(
      name: "IAlpacaVaultConfig",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAlpacaVaultConfig__factory>;
    getContractFactory(
      name: "IAuthority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthority__factory>;
    getContractFactory(
      name: "IAuthTokenAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthTokenAdapter__factory>;
    getContractFactory(
      name: "IBookKeeper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBookKeeper__factory>;
    getContractFactory(
      name: "IBookKeeperFlashBorrower",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBookKeeperFlashBorrower__factory>;
    getContractFactory(
      name: "IBookKeeperFlashLender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBookKeeperFlashLender__factory>;
    getContractFactory(
      name: "ICagable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICagable__factory>;
    getContractFactory(
      name: "ICollateralPoolConfig",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICollateralPoolConfig__factory>;
    getContractFactory(
      name: "IERC3156FlashBorrower",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC3156FlashBorrower__factory>;
    getContractFactory(
      name: "IERC3156FlashLender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC3156FlashLender__factory>;
    getContractFactory(
      name: "IFarmableTokenAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFarmableTokenAdapter__factory>;
    getContractFactory(
      name: "IFlashLendingCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashLendingCallee__factory>;
    getContractFactory(
      name: "IGenericTokenAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGenericTokenAdapter__factory>;
    getContractFactory(
      name: "ILiquidationEngine",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidationEngine__factory>;
    getContractFactory(
      name: "ILiquidationStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidationStrategy__factory>;
    getContractFactory(
      name: "IManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IManager__factory>;
    getContractFactory(
      name: "IPositionHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPositionHandler__factory>;
    getContractFactory(
      name: "IPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceFeed__factory>;
    getContractFactory(
      name: "IPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceOracle__factory>;
    getContractFactory(
      name: "IProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProxy__factory>;
    getContractFactory(
      name: "IProxyRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProxyRegistry__factory>;
    getContractFactory(
      name: "IShield",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IShield__factory>;
    getContractFactory(
      name: "IShowStopper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IShowStopper__factory>;
    getContractFactory(
      name: "IStabilityFeeCollector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStabilityFeeCollector__factory>;
    getContractFactory(
      name: "IStablecoin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStablecoin__factory>;
    getContractFactory(
      name: "IStablecoinAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStablecoinAdapter__factory>;
    getContractFactory(
      name: "IStableSwapModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStableSwapModule__factory>;
    getContractFactory(
      name: "IStdReference",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStdReference__factory>;
    getContractFactory(
      name: "ISystemDebtEngine",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISystemDebtEngine__factory>;
    getContractFactory(
      name: "ITimeLock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITimeLock__factory>;
    getContractFactory(
      name: "IToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IToken__factory>;
    getContractFactory(
      name: "ITokenAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenAdapter__factory>;
    getContractFactory(
      name: "IWBNB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWBNB__factory>;
    getContractFactory(
      name: "PCSFlashLiquidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PCSFlashLiquidator__factory>;
    getContractFactory(
      name: "GetPositions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GetPositions__factory>;
    getContractFactory(
      name: "PositionHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PositionHandler__factory>;
    getContractFactory(
      name: "PositionManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PositionManager__factory>;
    getContractFactory(
      name: "BEP20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BEP20__factory>;
    getContractFactory(
      name: "BookKeeperFlashMintArbitrager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BookKeeperFlashMintArbitrager__factory>;
    getContractFactory(
      name: "FlashMintArbitrager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashMintArbitrager__factory>;
    getContractFactory(
      name: "MockAlpacaOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockAlpacaOracle__factory>;
    getContractFactory(
      name: "MockFlashLendingCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockFlashLendingCallee__factory>;
    getContractFactory(
      name: "MockFlashLendingCalleeMintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockFlashLendingCalleeMintable__factory>;
    getContractFactory(
      name: "MockMyFlashLoan",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockMyFlashLoan__factory>;
    getContractFactory(
      name: "MockPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPriceFeed__factory>;
    getContractFactory(
      name: "MockStdReference",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockStdReference__factory>;
    getContractFactory(
      name: "WBNB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WBNB__factory>;
    getContractFactory(
      name: "AlpacaOraclePriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AlpacaOraclePriceFeed__factory>;
    getContractFactory(
      name: "IbTokenPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IbTokenPriceFeed__factory>;
    getContractFactory(
      name: "SimplePriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimplePriceFeed__factory>;
    getContractFactory(
      name: "StaticPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StaticPriceFeed__factory>;
    getContractFactory(
      name: "StrictAlpacaOraclePriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StrictAlpacaOraclePriceFeed__factory>;
    getContractFactory(
      name: "BandPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BandPriceOracle__factory>;
    getContractFactory(
      name: "DexPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DexPriceOracle__factory>;
    getContractFactory(
      name: "VaultPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultPriceOracle__factory>;
    getContractFactory(
      name: "AlpacaStablecoinProxyActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AlpacaStablecoinProxyActions__factory>;
    getContractFactory(
      name: "AlpacaAuth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AlpacaAuth__factory>;
    getContractFactory(
      name: "AlpacaAuthEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AlpacaAuthEvents__factory>;
    getContractFactory(
      name: "AlpacaNote",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AlpacaNote__factory>;
    getContractFactory(
      name: "ProxyWallet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyWallet__factory>;
    getContractFactory(
      name: "ProxyWalletCache",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyWalletCache__factory>;
    getContractFactory(
      name: "ProxyWalletFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyWalletFactory__factory>;
    getContractFactory(
      name: "ProxyWalletRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyWalletRegistry__factory>;
    getContractFactory(
      name: "AuthTokenAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AuthTokenAdapter__factory>;
    getContractFactory(
      name: "IbTokenAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IbTokenAdapter__factory>;
    getContractFactory(
      name: "StablecoinAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StablecoinAdapter__factory>;
    getContractFactory(
      name: "TokenAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenAdapter__factory>;
    getContractFactory(
      name: "AlpacaStablecoin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AlpacaStablecoin__factory>;
    getContractFactory(
      name: "BookKeeper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BookKeeper__factory>;
    getContractFactory(
      name: "AccessControlConfig",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlConfig__factory>;
    getContractFactory(
      name: "CollateralPoolConfig",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CollateralPoolConfig__factory>;
    getContractFactory(
      name: "FixedSpreadLiquidationStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FixedSpreadLiquidationStrategy__factory>;
    getContractFactory(
      name: "LiquidationEngine",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidationEngine__factory>;
    getContractFactory(
      name: "PriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceOracle__factory>;
    getContractFactory(
      name: "ShowStopper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShowStopper__factory>;
    getContractFactory(
      name: "StabilityFeeCollector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StabilityFeeCollector__factory>;
    getContractFactory(
      name: "StableSwapModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StableSwapModule__factory>;
    getContractFactory(
      name: "SystemDebtEngine",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SystemDebtEngine__factory>;
    getContractFactory(
      name: "AdminUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdminUpgradeabilityProxy__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "UpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeabilityProxy__factory>;
    getContractFactory(
      name: "AdminUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdminUpgradeabilityProxy__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ProxyAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyAdmin__factory>;
    getContractFactory(
      name: "UpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeabilityProxy__factory>;
    getContractFactory(
      name: "ERC20Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Interface__factory>;

    getContractAt(
      name: "IPancakeRouter02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeRouter02>;
    getContractAt(
      name: "AccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlUpgradeable>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "PausableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableUpgradeable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IPancakeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeFactory>;
    getContractAt(
      name: "IPancakePair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakePair>;
    getContractAt(
      name: "AlpacaToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AlpacaToken>;
    getContractAt(
      name: "FairLaunch",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FairLaunch>;
    getContractAt(
      name: "IFairLaunch",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFairLaunch>;
    getContractAt(
      name: "IFairLaunchV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFairLaunchV1>;
    getContractAt(
      name: "Shield",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Shield>;
    getContractAt(
      name: "FlashLoanReceiverBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashLoanReceiverBase>;
    getContractAt(
      name: "FlashMintModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashMintModule>;
    getContractAt(
      name: "IAccessControlConfig",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlConfig>;
    getContractAt(
      name: "IAlpacaFairLaunch",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAlpacaFairLaunch>;
    getContractAt(
      name: "IAlpacaOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAlpacaOracle>;
    getContractAt(
      name: "IAlpacaVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAlpacaVault>;
    getContractAt(
      name: "IAlpacaVaultConfig",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAlpacaVaultConfig>;
    getContractAt(
      name: "IAuthority",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthority>;
    getContractAt(
      name: "IAuthTokenAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthTokenAdapter>;
    getContractAt(
      name: "IBookKeeper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBookKeeper>;
    getContractAt(
      name: "IBookKeeperFlashBorrower",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBookKeeperFlashBorrower>;
    getContractAt(
      name: "IBookKeeperFlashLender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBookKeeperFlashLender>;
    getContractAt(
      name: "ICagable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICagable>;
    getContractAt(
      name: "ICollateralPoolConfig",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICollateralPoolConfig>;
    getContractAt(
      name: "IERC3156FlashBorrower",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC3156FlashBorrower>;
    getContractAt(
      name: "IERC3156FlashLender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC3156FlashLender>;
    getContractAt(
      name: "IFarmableTokenAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFarmableTokenAdapter>;
    getContractAt(
      name: "IFlashLendingCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlashLendingCallee>;
    getContractAt(
      name: "IGenericTokenAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGenericTokenAdapter>;
    getContractAt(
      name: "ILiquidationEngine",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidationEngine>;
    getContractAt(
      name: "ILiquidationStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILiquidationStrategy>;
    getContractAt(
      name: "IManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IManager>;
    getContractAt(
      name: "IPositionHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPositionHandler>;
    getContractAt(
      name: "IPriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPriceFeed>;
    getContractAt(
      name: "IPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPriceOracle>;
    getContractAt(
      name: "IProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProxy>;
    getContractAt(
      name: "IProxyRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProxyRegistry>;
    getContractAt(
      name: "IShield",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IShield>;
    getContractAt(
      name: "IShowStopper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IShowStopper>;
    getContractAt(
      name: "IStabilityFeeCollector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStabilityFeeCollector>;
    getContractAt(
      name: "IStablecoin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStablecoin>;
    getContractAt(
      name: "IStablecoinAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStablecoinAdapter>;
    getContractAt(
      name: "IStableSwapModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStableSwapModule>;
    getContractAt(
      name: "IStdReference",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStdReference>;
    getContractAt(
      name: "ISystemDebtEngine",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISystemDebtEngine>;
    getContractAt(
      name: "ITimeLock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITimeLock>;
    getContractAt(
      name: "IToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IToken>;
    getContractAt(
      name: "ITokenAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenAdapter>;
    getContractAt(
      name: "IWBNB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWBNB>;
    getContractAt(
      name: "PCSFlashLiquidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PCSFlashLiquidator>;
    getContractAt(
      name: "GetPositions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GetPositions>;
    getContractAt(
      name: "PositionHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PositionHandler>;
    getContractAt(
      name: "PositionManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PositionManager>;
    getContractAt(
      name: "BEP20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BEP20>;
    getContractAt(
      name: "BookKeeperFlashMintArbitrager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BookKeeperFlashMintArbitrager>;
    getContractAt(
      name: "FlashMintArbitrager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashMintArbitrager>;
    getContractAt(
      name: "MockAlpacaOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockAlpacaOracle>;
    getContractAt(
      name: "MockFlashLendingCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockFlashLendingCallee>;
    getContractAt(
      name: "MockFlashLendingCalleeMintable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockFlashLendingCalleeMintable>;
    getContractAt(
      name: "MockMyFlashLoan",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockMyFlashLoan>;
    getContractAt(
      name: "MockPriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockPriceFeed>;
    getContractAt(
      name: "MockStdReference",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockStdReference>;
    getContractAt(
      name: "WBNB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WBNB>;
    getContractAt(
      name: "AlpacaOraclePriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AlpacaOraclePriceFeed>;
    getContractAt(
      name: "IbTokenPriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IbTokenPriceFeed>;
    getContractAt(
      name: "SimplePriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimplePriceFeed>;
    getContractAt(
      name: "StaticPriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StaticPriceFeed>;
    getContractAt(
      name: "StrictAlpacaOraclePriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StrictAlpacaOraclePriceFeed>;
    getContractAt(
      name: "BandPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BandPriceOracle>;
    getContractAt(
      name: "DexPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DexPriceOracle>;
    getContractAt(
      name: "VaultPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultPriceOracle>;
    getContractAt(
      name: "AlpacaStablecoinProxyActions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AlpacaStablecoinProxyActions>;
    getContractAt(
      name: "AlpacaAuth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AlpacaAuth>;
    getContractAt(
      name: "AlpacaAuthEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AlpacaAuthEvents>;
    getContractAt(
      name: "AlpacaNote",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AlpacaNote>;
    getContractAt(
      name: "ProxyWallet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyWallet>;
    getContractAt(
      name: "ProxyWalletCache",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyWalletCache>;
    getContractAt(
      name: "ProxyWalletFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyWalletFactory>;
    getContractAt(
      name: "ProxyWalletRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyWalletRegistry>;
    getContractAt(
      name: "AuthTokenAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AuthTokenAdapter>;
    getContractAt(
      name: "IbTokenAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IbTokenAdapter>;
    getContractAt(
      name: "StablecoinAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StablecoinAdapter>;
    getContractAt(
      name: "TokenAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenAdapter>;
    getContractAt(
      name: "AlpacaStablecoin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AlpacaStablecoin>;
    getContractAt(
      name: "BookKeeper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BookKeeper>;
    getContractAt(
      name: "AccessControlConfig",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlConfig>;
    getContractAt(
      name: "CollateralPoolConfig",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CollateralPoolConfig>;
    getContractAt(
      name: "FixedSpreadLiquidationStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FixedSpreadLiquidationStrategy>;
    getContractAt(
      name: "LiquidationEngine",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LiquidationEngine>;
    getContractAt(
      name: "PriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PriceOracle>;
    getContractAt(
      name: "ShowStopper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShowStopper>;
    getContractAt(
      name: "StabilityFeeCollector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StabilityFeeCollector>;
    getContractAt(
      name: "StableSwapModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StableSwapModule>;
    getContractAt(
      name: "SystemDebtEngine",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SystemDebtEngine>;
    getContractAt(
      name: "AdminUpgradeabilityProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AdminUpgradeabilityProxy>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "UpgradeabilityProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradeabilityProxy>;
    getContractAt(
      name: "AdminUpgradeabilityProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AdminUpgradeabilityProxy>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ProxyAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyAdmin>;
    getContractAt(
      name: "UpgradeabilityProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradeabilityProxy>;
    getContractAt(
      name: "ERC20Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Interface>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
