"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockStdReference__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "_base",
                type: "string",
            },
            {
                internalType: "string",
                name: "_quote",
                type: "string",
            },
        ],
        name: "getReferenceData",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "rate",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "lastUpdatedBase",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "lastUpdatedQuote",
                        type: "uint256",
                    },
                ],
                internalType: "struct IStdReference.ReferenceData",
                name: "data",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string[]",
                name: "_bases",
                type: "string[]",
            },
            {
                internalType: "string[]",
                name: "_quotes",
                type: "string[]",
            },
        ],
        name: "getReferenceDataBulk",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "rate",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "lastUpdatedBase",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "lastUpdatedQuote",
                        type: "uint256",
                    },
                ],
                internalType: "struct IStdReference.ReferenceData[]",
                name: "arr",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610332806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806365555bcc1461003b578063e42a071b14610064575b600080fd5b61004e61004936600461020b565b610084565b60405161005b91906102c8565b60405180910390f35b6100776100723660046101ab565b6100a3565b60405161005b919061027a565b61008c6100ac565b600080825260208201819052604082015292915050565b60605b92915050565b60405180606001604052806000815260200160008152602001600081525090565b600082601f8301126100dd578081fd5b81356001600160401b038111156100f2578182fd5b602061010181828402016102d6565b828152925080830184820160005b8481101561013857610126888584358a0101610143565b8352918301919083019060010161010f565b505050505092915050565b600082601f830112610153578081fd5b81356001600160401b03811115610168578182fd5b61017b601f8201601f19166020016102d6565b915080825283602082850101111561019257600080fd5b8060208401602084013760009082016020015292915050565b600080604083850312156101bd578182fd5b82356001600160401b03808211156101d3578384fd5b6101df868387016100cd565b935060208501359150808211156101f4578283fd5b50610201858286016100cd565b9150509250929050565b6000806040838503121561021d578182fd5b82356001600160401b0380821115610233578384fd5b61023f86838701610143565b93506020850135915080821115610254578283fd5b5061020185828601610143565b8051825260208082015190830152604090810151910152565b6020808252825182820181905260009190848201906040850190845b818110156102bc576102a9838551610261565b9284019260609290920191600101610296565b50909695505050505050565b606081016100a68284610261565b6040518181016001600160401b03811182821017156102f457600080fd5b60405291905056fea2646970667358221220de44c50bf1f19bed5dbab29db6488560ca4b00a3b9c07aa7414f7ccfc333af1464736f6c634300060c0033";
const isSuperArgs = (xs) => xs.length > 1;
class MockStdReference__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockStdReference__factory = MockStdReference__factory;
MockStdReference__factory.bytecode = _bytecode;
MockStdReference__factory.abi = _abi;
