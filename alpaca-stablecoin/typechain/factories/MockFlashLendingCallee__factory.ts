/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockFlashLendingCallee,
  MockFlashLendingCalleeInterface,
} from "../MockFlashLendingCallee";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "debtValueToRepay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmountToLiquidate",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "flashLendingCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060f08061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063af7bd14214602d575b600080fd5b60b160048036036080811015604157600080fd5b6001600160a01b038235169160208101359160408201359190810190608081016060820135600160201b811115607657600080fd5b820183602082011115608757600080fd5b803590602001918460018302840111600160201b8311171560a757600080fd5b50909250905060b3565b005b505050505056fea26469706673582212208407c767e400cd74f499a83988add4332a3887c49d0accff15f70dcbca0a365b64736f6c634300060c0033";

type MockFlashLendingCalleeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockFlashLendingCalleeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockFlashLendingCallee__factory extends ContractFactory {
  constructor(...args: MockFlashLendingCalleeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockFlashLendingCallee> {
    return super.deploy(overrides || {}) as Promise<MockFlashLendingCallee>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockFlashLendingCallee {
    return super.attach(address) as MockFlashLendingCallee;
  }
  connect(signer: Signer): MockFlashLendingCallee__factory {
    return super.connect(signer) as MockFlashLendingCallee__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockFlashLendingCalleeInterface {
    return new utils.Interface(_abi) as MockFlashLendingCalleeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockFlashLendingCallee {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockFlashLendingCallee;
  }
}
