"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BandPriceOracle__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "_tokenAddress",
                type: "address",
            },
            {
                indexed: false,
                internalType: "string",
                name: "_tokenSymbol",
                type: "string",
            },
        ],
        name: "LogSetTokenSymbol",
        type: "event",
    },
    {
        inputs: [],
        name: "accessControlConfig",
        outputs: [
            {
                internalType: "contract IAccessControlConfig",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_token0",
                type: "address",
            },
            {
                internalType: "address",
                name: "_token1",
                type: "address",
            },
        ],
        name: "getPrice",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_stdReferenceProxy",
                type: "address",
            },
            {
                internalType: "address",
                name: "_accessControlConfig",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_tokenAddress",
                type: "address",
            },
            {
                internalType: "string",
                name: "_tokenSymbol",
                type: "string",
            },
        ],
        name: "setTokenSymbol",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "stdReferenceProxy",
        outputs: [
            {
                internalType: "contract IStdReference",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "tokenSymbols",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610c32806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063485cc955146100675780637eb89d331461007c578063ac41865a1461009a578063c8cc243f146100bb578063f036417f146100c3578063fb0b2b36146100d6575b600080fd5b61007a610075366004610845565b6100f6565b005b61008461023c565b60405161009191906109ed565b60405180910390f35b6100ad6100a8366004610845565b610251565b604051610091929190610b90565b610084610515565b61007a6100d1366004610879565b610524565b6100e96100e4366004610823565b6106a2565b6040516100919190610a01565b600054610100900460ff168061010f575061010f61073b565b8061011d575060005460ff16155b6101425760405162461bcd60e51b815260040161013990610a9f565b60405180910390fd5b600054610100900460ff1615801561016d576000805460ff1961ff0019909116610100171660011790555b6000805462010000600160b01b031916620100006001600160a01b038681168202929092179283905560405163195556f360e21b8152920416906365555bcc906101b990600401610a66565b60606040518083038186803b1580156101d157600080fd5b505afa1580156101e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610209919061094e565b50600180546001600160a01b0319166001600160a01b0384161790558015610237576000805461ff00191690555b505050565b6000546201000090046001600160a01b031681565b6001600160a01b0382166000908152600260208181526040808420805482516001821615610100026000190190911694909404601f810184900484028501840190925281845284936060939092908301828280156102f05780601f106102c5576101008083540402835291602001916102f0565b820191906000526020600020905b8154815290600101906020018083116102d357829003601f168201915b5050506001600160a01b03871660009081526002602081815260409283902080548451601f60001961010060018516150201909216949094049081018390048302840183019094528383529596506060959194509092508301828280156103985780601f1061036d57610100808354040283529160200191610398565b820191906000526020600020905b81548152906001019060200180831161037b57829003601f168201915b505050505090508080519060200120828051906020012014156103cd5760405162461bcd60e51b815260040161013990610b24565b60408051602080820190925260009052825190830120600080516020610bdd83398151915214156104105760405162461bcd60e51b815260040161013990610aed565b60408051602080820190925260009052815190820120600080516020610bdd83398151915214156104535760405162461bcd60e51b815260040161013990610b59565b61045b610752565b60005460405163195556f360e21b8152620100009091046001600160a01b0316906365555bcc906104929086908690600401610a14565b60606040518083038186803b1580156104aa57600080fd5b505afa1580156104be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e2919061094e565b9050600081604001518260200151106104ff578160400151610505565b81602001515b9151989197509095505050505050565b6001546001600160a01b031681565b6001546040805163e58378bb60e01b815290516001600160a01b03909216916391d1485491839163e58378bb91600480820192602092909190829003018186803b15801561057157600080fd5b505afa158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a99190610936565b336040518363ffffffff1660e01b81526004016105c79291906109d6565b60206040518083038186803b1580156105df57600080fd5b505afa1580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106179190610916565b6106335760405162461bcd60e51b815260040161013990610a42565b6001600160a01b0382166000908152600260209081526040909120825161065c92840190610773565b50816001600160a01b03167f98e96baff014754a375324221b70d18c5fb71684cd358d7cf905f7dbf4e1fda3826040516106969190610a01565b60405180910390a25050565b600260208181526000928352604092839020805484516001821615610100026000190190911693909304601f81018390048302840183019094528383529192908301828280156107335780601f1061070857610100808354040283529160200191610733565b820191906000526020600020905b81548152906001019060200180831161071657829003601f168201915b505050505081565b60006107463061074c565b15905090565b3b151590565b60405180606001604052806000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106107b457805160ff19168380011785556107e1565b828001600101855582156107e1579182015b828111156107e15782518255916020019190600101906107c6565b506107ed9291506107f1565b5090565b5b808211156107ed57600081556001016107f2565b80356001600160a01b038116811461081d57600080fd5b92915050565b600060208284031215610834578081fd5b61083e8383610806565b9392505050565b60008060408385031215610857578081fd5b6108618484610806565b91506108708460208501610806565b90509250929050565b6000806040838503121561088b578182fd5b823561089681610bc4565b91506020838101356001600160401b03808211156108b2578384fd5b818601915086601f8301126108c5578384fd5b8135818111156108d3578485fd5b6108e5601f8201601f19168501610b9e565b915080825287848285010111156108fa578485fd5b8084840185840137810190920192909252919491935090915050565b600060208284031215610927578081fd5b8151801515811461083e578182fd5b600060208284031215610947578081fd5b5051919050565b60006060828403121561095f578081fd5b6109696060610b9e565b8251815260208301516020820152604083015160408201528091505092915050565b60008151808452815b818110156109b057602081850181015186830182015201610994565b818111156109c15782602083870101525b50601f01601f19169290920160200192915050565b9182526001600160a01b0316602082015260400190565b6001600160a01b0391909116815260200190565b60006020825261083e602083018461098b565b600060408252610a27604083018561098b565b8281036020840152610a39818561098b565b95945050505050565b6020808252600a9082015269216f776e6572526f6c6560b01b604082015260600190565b604080825260049082015263109554d160e21b6060820152608060208201819052600390820152621554d160ea1b60a082015260c00190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252601e908201527f42616e6450726963654f7261636c652f756e6b6e6f776e2d746f6b656e300000604082015260600190565b6020808252601b908201527a10985b99141c9a58d953dc9858db194bdcd85b594b5cde5b589bdb602a1b604082015260600190565b6020808252601e908201527f42616e6450726963654f7261636c652f756e6b6e6f776e2d746f6b656e310000604082015260600190565b918252602082015260400190565b6040518181016001600160401b0381118282101715610bbc57600080fd5b604052919050565b6001600160a01b0381168114610bd957600080fd5b5056fec5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470a2646970667358221220cfd3570187bcdc4149591e51ec38cab218a3a180ca1b746a24fd6f229113a19464736f6c634300060c0033";
const isSuperArgs = (xs) => xs.length > 1;
class BandPriceOracle__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.BandPriceOracle__factory = BandPriceOracle__factory;
BandPriceOracle__factory.bytecode = _bytecode;
BandPriceOracle__factory.abi = _abi;
