"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockGrassHouse__factory = void 0;
const contracts_1 = require("@ethersproject/contracts");
class MockGrassHouse__factory extends contracts_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(_rewardToken, overrides) {
        return super.deploy(_rewardToken, overrides || {});
    }
    getDeployTransaction(_rewardToken, overrides) {
        return super.getDeployTransaction(_rewardToken, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new contracts_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockGrassHouse__factory = MockGrassHouse__factory;
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_rewardToken",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_for",
                type: "address",
            },
        ],
        name: "claim",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "feed",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "rewardPerClaim",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "rewardToken",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "setRewardPerClaim",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506040516104cc3803806104cc83398101604081905261002f91610057565b600080546001600160a01b0319166001600160a01b0392909216919091178155600155610087565b60006020828403121561006957600080fd5b81516001600160a01b038116811461008057600080fd5b9392505050565b610436806100966000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063163f7dbc1461005c5780631e83409a146100715780633b62395e14610097578063f59dfdfb146100a0578063f7c618c1146100c3575b600080fd5b61006f61006a3660046103ac565b600155565b005b61008461007f36600461035a565b6100ee565b6040519081526020015b60405180910390f35b61008460015481565b6100b36100ae3660046103ac565b610111565b604051901515815260200161008e565b6000546100d6906001600160a01b031681565b6040516001600160a01b03909116815260200161008e565b60015460008054909161010c916001600160a01b0316908490610132565b919050565b6000805461012a906001600160a01b0316333085610242565b506001919050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161018e91906103c5565b6000604051808303816000865af19150503d80600081146101cb576040519150601f19603f3d011682016040523d82523d6000602084013e6101d0565b606091505b50915091508180156101fa5750805115806101fa5750808060200190518101906101fa919061038a565b61023b5760405162461bcd60e51b815260206004820152600d60248201526c10b9b0b332aa3930b739b332b960991b60448201526064015b60405180910390fd5b5050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916102a691906103c5565b6000604051808303816000865af19150503d80600081146102e3576040519150601f19603f3d011682016040523d82523d6000602084013e6102e8565b606091505b5091509150818015610312575080511580610312575080806020019051810190610312919061038a565b6103525760405162461bcd60e51b815260206004820152601160248201527021736166655472616e7366657246726f6d60781b6044820152606401610232565b505050505050565b60006020828403121561036c57600080fd5b81356001600160a01b038116811461038357600080fd5b9392505050565b60006020828403121561039c57600080fd5b8151801515811461038357600080fd5b6000602082840312156103be57600080fd5b5035919050565b6000825160005b818110156103e657602081860181015185830152016103cc565b818111156103f5576000828501525b50919091019291505056fea2646970667358221220a8aa5685a9b7b186f08e90125f286660a73c1de87f3cfb76bbd7ce26533517be64736f6c63430008070033";
