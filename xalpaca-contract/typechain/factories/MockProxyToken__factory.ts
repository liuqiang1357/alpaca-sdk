/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockProxyToken } from "../MockProxyToken";

export class MockProxyToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MockProxyToken> {
    return super.deploy(overrides || {}) as Promise<MockProxyToken>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockProxyToken {
    return super.attach(address) as MockProxyToken;
  }
  connect(signer: Signer): MockProxyToken__factory {
    return super.connect(signer) as MockProxyToken__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockProxyToken {
    return new Contract(address, _abi, signerOrProvider) as MockProxyToken;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "okHolders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_okHolders",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "_isOk",
        type: "bool",
      },
    ],
    name: "setOkHolders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506115ae806100206000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806387641575116100ad578063a9059cbb11610071578063a9059cbb14610278578063dc9a567b1461028b578063dd62ed3e146102ae578063f2fde38b146102e7578063f7c618c1146102fa57600080fd5b806387641575146102125780638da5cb5b1461022557806395d89b411461024a5780639dc29fac14610252578063a457c2d71461026557600080fd5b806339509351116100f457806339509351146101a657806340c10f19146101b95780634cd88b76146101ce57806370a08231146101e1578063715018a61461020a57600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd14610184578063313ce56714610197575b600080fd5b61013961030d565b60405161014691906113d9565b60405180910390f35b61016261015d366004611265565b61039f565b6040519015158152602001610146565b6035545b604051908152602001610146565b610162610192366004611229565b6103b5565b60405160128152602001610146565b6101626101b4366004611265565b610464565b6101cc6101c7366004611265565b6104a0565b005b6101cc6101dc36600461136d565b61054c565b6101766101ef3660046111d4565b6001600160a01b031660009081526033602052604090205490565b6101cc610637565b6101cc61022036600461128f565b61066d565b6065546001600160a01b03165b6040516001600160a01b039091168152602001610146565b610139610703565b6101cc610260366004611265565b610712565b610162610273366004611265565b6107ba565b610162610286366004611265565b610853565b6101626102993660046111d4565b60986020526000908152604090205460ff1681565b6101766102bc3660046111f6565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6101cc6102f53660046111d4565b610860565b609754610232906001600160a01b031681565b60606036805461031c906114e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610348906114e0565b80156103955780601f1061036a57610100808354040283529160200191610395565b820191906000526020600020905b81548152906001019060200180831161037857829003601f168201915b5050505050905090565b60006103ac3384846108fb565b50600192915050565b60006103c2848484610a1f565b6001600160a01b03841660009081526034602090815260408083203384529091529020548281101561044c5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61045985338584036108fb565b506001949350505050565b3360008181526034602090815260408083206001600160a01b038716845290915281205490916103ac91859061049b9086906114b1565b6108fb565b6065546001600160a01b031633146104ca5760405162461bcd60e51b81526004016104439061147c565b6001600160a01b03821660009081526098602052604090205460ff1661053e5760405162461bcd60e51b815260206004820152602360248201527f64656274546f6b656e3a3a6d696e743a3a20756e617070726f76656420686f6c6044820152623232b960e91b6064820152608401610443565b6105488282610bee565b5050565b600054610100900460ff1680610565575060005460ff16155b6105815760405162461bcd60e51b81526004016104439061142e565b600054610100900460ff161580156105a3576000805461ffff19166101011790555b6105ab610ccd565b61061e85858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f89018190048102820181019092528781529250879150869081908401838280828437600092019190915250610d4892505050565b8015610630576000805461ff00191690555b5050505050565b6065546001600160a01b031633146106615760405162461bcd60e51b81526004016104439061147c565b61066b6000610dc7565b565b6065546001600160a01b031633146106975760405162461bcd60e51b81526004016104439061147c565b60005b82518110156106fe5781609860008584815181106106ba576106ba61154c565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806106f68161151b565b91505061069a565b505050565b60606037805461031c906114e0565b6065546001600160a01b0316331461073c5760405162461bcd60e51b81526004016104439061147c565b6001600160a01b03821660009081526098602052604090205460ff166107b05760405162461bcd60e51b815260206004820152602360248201527f64656274546f6b656e3a3a6275726e3a3a20756e617070726f76656420686f6c6044820152623232b960e91b6064820152608401610443565b6105488282610e19565b3360009081526034602090815260408083206001600160a01b03861684529091528120548281101561083c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610443565b61084933858584036108fb565b5060019392505050565b60006103ac338484610a1f565b6065546001600160a01b0316331461088a5760405162461bcd60e51b81526004016104439061147c565b6001600160a01b0381166108ef5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610443565b6108f881610dc7565b50565b6001600160a01b03831661095d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610443565b6001600160a01b0382166109be5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610443565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a835760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610443565b6001600160a01b038216610ae55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610443565b6001600160a01b03831660009081526033602052604090205481811015610b5d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610443565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610b949084906114b1565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610be091815260200190565b60405180910390a350505050565b6001600160a01b038216610c445760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610443565b8060356000828254610c5691906114b1565b90915550506001600160a01b03821660009081526033602052604081208054839290610c839084906114b1565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600054610100900460ff1680610ce6575060005460ff16155b610d025760405162461bcd60e51b81526004016104439061142e565b600054610100900460ff16158015610d24576000805461ffff19166101011790555b610d2c610f67565b610d34610fd1565b80156108f8576000805461ff001916905550565b600054610100900460ff1680610d61575060005460ff16155b610d7d5760405162461bcd60e51b81526004016104439061142e565b600054610100900460ff16158015610d9f576000805461ffff19166101011790555b610da7610f67565b610db18383611031565b80156106fe576000805461ff0019169055505050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610e795760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610443565b6001600160a01b03821660009081526033602052604090205481811015610eed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610443565b6001600160a01b0383166000908152603360205260408120838303905560358054849290610f1c9084906114c9565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600054610100900460ff1680610f80575060005460ff16155b610f9c5760405162461bcd60e51b81526004016104439061142e565b600054610100900460ff16158015610d34576000805461ffff191661010117905580156108f8576000805461ff001916905550565b600054610100900460ff1680610fea575060005460ff16155b6110065760405162461bcd60e51b81526004016104439061142e565b600054610100900460ff16158015611028576000805461ffff19166101011790555b610d3433610dc7565b600054610100900460ff168061104a575060005460ff16155b6110665760405162461bcd60e51b81526004016104439061142e565b600054610100900460ff16158015611088576000805461ffff19166101011790555b825161109b9060369060208601906110c6565b5081516110af9060379060208501906110c6565b5080156106fe576000805461ff0019169055505050565b8280546110d2906114e0565b90600052602060002090601f0160209004810192826110f4576000855561113a565b82601f1061110d57805160ff191683800117855561113a565b8280016001018555821561113a579182015b8281111561113a57825182559160200191906001019061111f565b5061114692915061114a565b5090565b5b80821115611146576000815560010161114b565b80356001600160a01b038116811461117657600080fd5b919050565b8035801515811461117657600080fd5b60008083601f84011261119d57600080fd5b50813567ffffffffffffffff8111156111b557600080fd5b6020830191508360208285010111156111cd57600080fd5b9250929050565b6000602082840312156111e657600080fd5b6111ef8261115f565b9392505050565b6000806040838503121561120957600080fd5b6112128361115f565b91506112206020840161115f565b90509250929050565b60008060006060848603121561123e57600080fd5b6112478461115f565b92506112556020850161115f565b9150604084013590509250925092565b6000806040838503121561127857600080fd5b6112818361115f565b946020939093013593505050565b600080604083850312156112a257600080fd5b823567ffffffffffffffff808211156112ba57600080fd5b818501915085601f8301126112ce57600080fd5b81356020828211156112e2576112e2611562565b8160051b604051601f19603f8301168101818110868211171561130757611307611562565b604052838152828101945085830182870184018b101561132657600080fd5b600096505b848710156113505761133c8161115f565b86526001969096019594830194830161132b565b509650611360905087820161117b565b9450505050509250929050565b6000806000806040858703121561138357600080fd5b843567ffffffffffffffff8082111561139b57600080fd5b6113a78883890161118b565b909650945060208701359150808211156113c057600080fd5b506113cd8782880161118b565b95989497509550505050565b600060208083528351808285015260005b81811015611406578581018301518582016040015282016113ea565b81811115611418576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156114c4576114c4611536565b500190565b6000828210156114db576114db611536565b500390565b600181811c908216806114f457607f821691505b6020821081141561151557634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561152f5761152f611536565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220817d912ee4ce170fd09e0449bb9db3cd0eff44ac5f9ec7da1714b85b62b6fe3f64736f6c63430008070033";
