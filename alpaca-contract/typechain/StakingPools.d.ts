/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface StakingPoolsInterface extends ethers.utils.Interface {
  functions: {
    "acceptGovernance()": FunctionFragment;
    "blocksPerEpoch()": FunctionFragment;
    "claim(uint256)": FunctionFragment;
    "createPool(address)": FunctionFragment;
    "deposit(uint256,uint256)": FunctionFragment;
    "exit(uint256)": FunctionFragment;
    "getPoolRewardWeight(uint256)": FunctionFragment;
    "getPoolToken(uint256)": FunctionFragment;
    "getPoolTotalDeposited(uint256)": FunctionFragment;
    "getStakeTotalDeposited(address,uint256)": FunctionFragment;
    "getStakeTotalUnclaimed(address,uint256)": FunctionFragment;
    "governance()": FunctionFragment;
    "initialize(address,address,uint256,uint256,uint256,uint256,uint256)": FunctionFragment;
    "owner()": FunctionFragment;
    "pendingGovernance()": FunctionFragment;
    "poolCount()": FunctionFragment;
    "reducedRewardRatePerEpoch()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "reward()": FunctionFragment;
    "rewardRate()": FunctionFragment;
    "setPendingGovernance(address)": FunctionFragment;
    "setRewardRate(uint256)": FunctionFragment;
    "setRewardWeights(uint256[])": FunctionFragment;
    "startBlock()": FunctionFragment;
    "tokenPoolIds(address)": FunctionFragment;
    "totalReducedEpochs()": FunctionFragment;
    "totalRewardWeight()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "withdraw(uint256,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "acceptGovernance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "blocksPerEpoch",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "claim", values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: "createPool", values: [string]): string;
  encodeFunctionData(
    functionFragment: "deposit",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "exit", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "getPoolRewardWeight",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPoolToken",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPoolTotalDeposited",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getStakeTotalDeposited",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getStakeTotalUnclaimed",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "governance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "pendingGovernance",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "poolCount", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "reducedRewardRatePerEpoch",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "reward", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "rewardRate",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setPendingGovernance",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setRewardRate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setRewardWeights",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "startBlock",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "tokenPoolIds",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "totalReducedEpochs",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "totalRewardWeight",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "withdraw",
    values: [BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "acceptGovernance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "blocksPerEpoch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "claim", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "createPool", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "deposit", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "exit", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getPoolRewardWeight",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPoolToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPoolTotalDeposited",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getStakeTotalDeposited",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getStakeTotalUnclaimed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "governance", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "pendingGovernance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "poolCount", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "reducedRewardRatePerEpoch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "reward", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "rewardRate", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setPendingGovernance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setRewardRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setRewardWeights",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "startBlock", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tokenPoolIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalReducedEpochs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalRewardWeight",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "withdraw", data: BytesLike): Result;

  events: {
    "GovernanceUpdated(address)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "PendingGovernanceUpdated(address)": EventFragment;
    "PoolCreated(uint256,address)": EventFragment;
    "PoolRewardWeightUpdated(uint256,uint256)": EventFragment;
    "RewardRateUpdated(uint256)": EventFragment;
    "TokensClaimed(address,uint256,uint256)": EventFragment;
    "TokensDeposited(address,uint256,uint256)": EventFragment;
    "TokensWithdrawn(address,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "GovernanceUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PendingGovernanceUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PoolCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PoolRewardWeightUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RewardRateUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokensClaimed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokensDeposited"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokensWithdrawn"): EventFragment;
}

export class StakingPools extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: StakingPoolsInterface;

  functions: {
    acceptGovernance(overrides?: Overrides): Promise<ContractTransaction>;

    "acceptGovernance()"(overrides?: Overrides): Promise<ContractTransaction>;

    blocksPerEpoch(overrides?: CallOverrides): Promise<[BigNumber]>;

    "blocksPerEpoch()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    claim(
      _poolId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "claim(uint256)"(
      _poolId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    createPool(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createPool(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    deposit(
      _poolId: BigNumberish,
      _depositAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "deposit(uint256,uint256)"(
      _poolId: BigNumberish,
      _depositAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    exit(
      _poolId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "exit(uint256)"(
      _poolId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getPoolRewardWeight(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getPoolRewardWeight(uint256)"(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getPoolToken(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getPoolToken(uint256)"(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getPoolTotalDeposited(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getPoolTotalDeposited(uint256)"(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getStakeTotalDeposited(
      _account: string,
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getStakeTotalDeposited(address,uint256)"(
      _account: string,
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getStakeTotalUnclaimed(
      _account: string,
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getStakeTotalUnclaimed(address,uint256)"(
      _account: string,
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    governance(overrides?: CallOverrides): Promise<[string]>;

    "governance()"(overrides?: CallOverrides): Promise<[string]>;

    initialize(
      _reward: string,
      _governance: string,
      _rewardRate: BigNumberish,
      _reducedRewardRatePerEpoch: BigNumberish,
      _startBlock: BigNumberish,
      _blocksPerEpoch: BigNumberish,
      _totalReducedEpochs: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(address,address,uint256,uint256,uint256,uint256,uint256)"(
      _reward: string,
      _governance: string,
      _rewardRate: BigNumberish,
      _reducedRewardRatePerEpoch: BigNumberish,
      _startBlock: BigNumberish,
      _blocksPerEpoch: BigNumberish,
      _totalReducedEpochs: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string] & { o: string }>;

    "owner()"(overrides?: CallOverrides): Promise<[string] & { o: string }>;

    pendingGovernance(overrides?: CallOverrides): Promise<[string]>;

    "pendingGovernance()"(overrides?: CallOverrides): Promise<[string]>;

    poolCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    "poolCount()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    reducedRewardRatePerEpoch(overrides?: CallOverrides): Promise<[BigNumber]>;

    "reducedRewardRatePerEpoch()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

    reward(overrides?: CallOverrides): Promise<[string]>;

    "reward()"(overrides?: CallOverrides): Promise<[string]>;

    rewardRate(overrides?: CallOverrides): Promise<[BigNumber]>;

    "rewardRate()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    setPendingGovernance(
      _pendingGovernance: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setPendingGovernance(address)"(
      _pendingGovernance: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setRewardRate(
      _rewardRate: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setRewardRate(uint256)"(
      _rewardRate: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setRewardWeights(
      _rewardWeights: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setRewardWeights(uint256[])"(
      _rewardWeights: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    startBlock(overrides?: CallOverrides): Promise<[BigNumber]>;

    "startBlock()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    tokenPoolIds(arg0: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    "tokenPoolIds(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    totalReducedEpochs(overrides?: CallOverrides): Promise<[BigNumber]>;

    "totalReducedEpochs()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    totalRewardWeight(overrides?: CallOverrides): Promise<[BigNumber]>;

    "totalRewardWeight()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    withdraw(
      _poolId: BigNumberish,
      _withdrawAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "withdraw(uint256,uint256)"(
      _poolId: BigNumberish,
      _withdrawAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  acceptGovernance(overrides?: Overrides): Promise<ContractTransaction>;

  "acceptGovernance()"(overrides?: Overrides): Promise<ContractTransaction>;

  blocksPerEpoch(overrides?: CallOverrides): Promise<BigNumber>;

  "blocksPerEpoch()"(overrides?: CallOverrides): Promise<BigNumber>;

  claim(
    _poolId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "claim(uint256)"(
    _poolId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  createPool(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createPool(address)"(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  deposit(
    _poolId: BigNumberish,
    _depositAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "deposit(uint256,uint256)"(
    _poolId: BigNumberish,
    _depositAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  exit(
    _poolId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "exit(uint256)"(
    _poolId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getPoolRewardWeight(
    _poolId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getPoolRewardWeight(uint256)"(
    _poolId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getPoolToken(
    _poolId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getPoolToken(uint256)"(
    _poolId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getPoolTotalDeposited(
    _poolId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getPoolTotalDeposited(uint256)"(
    _poolId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getStakeTotalDeposited(
    _account: string,
    _poolId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getStakeTotalDeposited(address,uint256)"(
    _account: string,
    _poolId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getStakeTotalUnclaimed(
    _account: string,
    _poolId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getStakeTotalUnclaimed(address,uint256)"(
    _account: string,
    _poolId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  governance(overrides?: CallOverrides): Promise<string>;

  "governance()"(overrides?: CallOverrides): Promise<string>;

  initialize(
    _reward: string,
    _governance: string,
    _rewardRate: BigNumberish,
    _reducedRewardRatePerEpoch: BigNumberish,
    _startBlock: BigNumberish,
    _blocksPerEpoch: BigNumberish,
    _totalReducedEpochs: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(address,address,uint256,uint256,uint256,uint256,uint256)"(
    _reward: string,
    _governance: string,
    _rewardRate: BigNumberish,
    _reducedRewardRatePerEpoch: BigNumberish,
    _startBlock: BigNumberish,
    _blocksPerEpoch: BigNumberish,
    _totalReducedEpochs: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  pendingGovernance(overrides?: CallOverrides): Promise<string>;

  "pendingGovernance()"(overrides?: CallOverrides): Promise<string>;

  poolCount(overrides?: CallOverrides): Promise<BigNumber>;

  "poolCount()"(overrides?: CallOverrides): Promise<BigNumber>;

  reducedRewardRatePerEpoch(overrides?: CallOverrides): Promise<BigNumber>;

  "reducedRewardRatePerEpoch()"(overrides?: CallOverrides): Promise<BigNumber>;

  renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

  "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

  reward(overrides?: CallOverrides): Promise<string>;

  "reward()"(overrides?: CallOverrides): Promise<string>;

  rewardRate(overrides?: CallOverrides): Promise<BigNumber>;

  "rewardRate()"(overrides?: CallOverrides): Promise<BigNumber>;

  setPendingGovernance(
    _pendingGovernance: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setPendingGovernance(address)"(
    _pendingGovernance: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setRewardRate(
    _rewardRate: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setRewardRate(uint256)"(
    _rewardRate: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setRewardWeights(
    _rewardWeights: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setRewardWeights(uint256[])"(
    _rewardWeights: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  startBlock(overrides?: CallOverrides): Promise<BigNumber>;

  "startBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

  tokenPoolIds(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  "tokenPoolIds(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  totalReducedEpochs(overrides?: CallOverrides): Promise<BigNumber>;

  "totalReducedEpochs()"(overrides?: CallOverrides): Promise<BigNumber>;

  totalRewardWeight(overrides?: CallOverrides): Promise<BigNumber>;

  "totalRewardWeight()"(overrides?: CallOverrides): Promise<BigNumber>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  withdraw(
    _poolId: BigNumberish,
    _withdrawAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "withdraw(uint256,uint256)"(
    _poolId: BigNumberish,
    _withdrawAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    acceptGovernance(overrides?: CallOverrides): Promise<void>;

    "acceptGovernance()"(overrides?: CallOverrides): Promise<void>;

    blocksPerEpoch(overrides?: CallOverrides): Promise<BigNumber>;

    "blocksPerEpoch()"(overrides?: CallOverrides): Promise<BigNumber>;

    claim(_poolId: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "claim(uint256)"(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    createPool(_token: string, overrides?: CallOverrides): Promise<BigNumber>;

    "createPool(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    deposit(
      _poolId: BigNumberish,
      _depositAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "deposit(uint256,uint256)"(
      _poolId: BigNumberish,
      _depositAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    exit(_poolId: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "exit(uint256)"(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getPoolRewardWeight(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPoolRewardWeight(uint256)"(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPoolToken(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getPoolToken(uint256)"(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getPoolTotalDeposited(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPoolTotalDeposited(uint256)"(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getStakeTotalDeposited(
      _account: string,
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getStakeTotalDeposited(address,uint256)"(
      _account: string,
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getStakeTotalUnclaimed(
      _account: string,
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getStakeTotalUnclaimed(address,uint256)"(
      _account: string,
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    governance(overrides?: CallOverrides): Promise<string>;

    "governance()"(overrides?: CallOverrides): Promise<string>;

    initialize(
      _reward: string,
      _governance: string,
      _rewardRate: BigNumberish,
      _reducedRewardRatePerEpoch: BigNumberish,
      _startBlock: BigNumberish,
      _blocksPerEpoch: BigNumberish,
      _totalReducedEpochs: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(address,address,uint256,uint256,uint256,uint256,uint256)"(
      _reward: string,
      _governance: string,
      _rewardRate: BigNumberish,
      _reducedRewardRatePerEpoch: BigNumberish,
      _startBlock: BigNumberish,
      _blocksPerEpoch: BigNumberish,
      _totalReducedEpochs: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    pendingGovernance(overrides?: CallOverrides): Promise<string>;

    "pendingGovernance()"(overrides?: CallOverrides): Promise<string>;

    poolCount(overrides?: CallOverrides): Promise<BigNumber>;

    "poolCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    reducedRewardRatePerEpoch(overrides?: CallOverrides): Promise<BigNumber>;

    "reducedRewardRatePerEpoch()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    reward(overrides?: CallOverrides): Promise<string>;

    "reward()"(overrides?: CallOverrides): Promise<string>;

    rewardRate(overrides?: CallOverrides): Promise<BigNumber>;

    "rewardRate()"(overrides?: CallOverrides): Promise<BigNumber>;

    setPendingGovernance(
      _pendingGovernance: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setPendingGovernance(address)"(
      _pendingGovernance: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setRewardRate(
      _rewardRate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setRewardRate(uint256)"(
      _rewardRate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setRewardWeights(
      _rewardWeights: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    "setRewardWeights(uint256[])"(
      _rewardWeights: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    startBlock(overrides?: CallOverrides): Promise<BigNumber>;

    "startBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

    tokenPoolIds(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "tokenPoolIds(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    totalReducedEpochs(overrides?: CallOverrides): Promise<BigNumber>;

    "totalReducedEpochs()"(overrides?: CallOverrides): Promise<BigNumber>;

    totalRewardWeight(overrides?: CallOverrides): Promise<BigNumber>;

    "totalRewardWeight()"(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    withdraw(
      _poolId: BigNumberish,
      _withdrawAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "withdraw(uint256,uint256)"(
      _poolId: BigNumberish,
      _withdrawAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    GovernanceUpdated(governance: null): EventFilter;

    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): EventFilter;

    PendingGovernanceUpdated(pendingGovernance: null): EventFilter;

    PoolCreated(poolId: BigNumberish | null, token: string | null): EventFilter;

    PoolRewardWeightUpdated(
      poolId: BigNumberish | null,
      rewardWeight: null
    ): EventFilter;

    RewardRateUpdated(rewardRate: null): EventFilter;

    TokensClaimed(
      user: string | null,
      poolId: BigNumberish | null,
      amount: null
    ): EventFilter;

    TokensDeposited(
      user: string | null,
      poolId: BigNumberish | null,
      amount: null
    ): EventFilter;

    TokensWithdrawn(
      user: string | null,
      poolId: BigNumberish | null,
      amount: null
    ): EventFilter;
  };

  estimateGas: {
    acceptGovernance(overrides?: Overrides): Promise<BigNumber>;

    "acceptGovernance()"(overrides?: Overrides): Promise<BigNumber>;

    blocksPerEpoch(overrides?: CallOverrides): Promise<BigNumber>;

    "blocksPerEpoch()"(overrides?: CallOverrides): Promise<BigNumber>;

    claim(_poolId: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "claim(uint256)"(
      _poolId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    createPool(_token: string, overrides?: Overrides): Promise<BigNumber>;

    "createPool(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    deposit(
      _poolId: BigNumberish,
      _depositAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "deposit(uint256,uint256)"(
      _poolId: BigNumberish,
      _depositAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    exit(_poolId: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "exit(uint256)"(
      _poolId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getPoolRewardWeight(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPoolRewardWeight(uint256)"(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPoolToken(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPoolToken(uint256)"(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPoolTotalDeposited(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPoolTotalDeposited(uint256)"(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getStakeTotalDeposited(
      _account: string,
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getStakeTotalDeposited(address,uint256)"(
      _account: string,
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getStakeTotalUnclaimed(
      _account: string,
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getStakeTotalUnclaimed(address,uint256)"(
      _account: string,
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    governance(overrides?: CallOverrides): Promise<BigNumber>;

    "governance()"(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(
      _reward: string,
      _governance: string,
      _rewardRate: BigNumberish,
      _reducedRewardRatePerEpoch: BigNumberish,
      _startBlock: BigNumberish,
      _blocksPerEpoch: BigNumberish,
      _totalReducedEpochs: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(address,address,uint256,uint256,uint256,uint256,uint256)"(
      _reward: string,
      _governance: string,
      _rewardRate: BigNumberish,
      _reducedRewardRatePerEpoch: BigNumberish,
      _startBlock: BigNumberish,
      _blocksPerEpoch: BigNumberish,
      _totalReducedEpochs: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    pendingGovernance(overrides?: CallOverrides): Promise<BigNumber>;

    "pendingGovernance()"(overrides?: CallOverrides): Promise<BigNumber>;

    poolCount(overrides?: CallOverrides): Promise<BigNumber>;

    "poolCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    reducedRewardRatePerEpoch(overrides?: CallOverrides): Promise<BigNumber>;

    "reducedRewardRatePerEpoch()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    renounceOwnership(overrides?: Overrides): Promise<BigNumber>;

    "renounceOwnership()"(overrides?: Overrides): Promise<BigNumber>;

    reward(overrides?: CallOverrides): Promise<BigNumber>;

    "reward()"(overrides?: CallOverrides): Promise<BigNumber>;

    rewardRate(overrides?: CallOverrides): Promise<BigNumber>;

    "rewardRate()"(overrides?: CallOverrides): Promise<BigNumber>;

    setPendingGovernance(
      _pendingGovernance: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setPendingGovernance(address)"(
      _pendingGovernance: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setRewardRate(
      _rewardRate: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setRewardRate(uint256)"(
      _rewardRate: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setRewardWeights(
      _rewardWeights: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setRewardWeights(uint256[])"(
      _rewardWeights: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    startBlock(overrides?: CallOverrides): Promise<BigNumber>;

    "startBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

    tokenPoolIds(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "tokenPoolIds(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    totalReducedEpochs(overrides?: CallOverrides): Promise<BigNumber>;

    "totalReducedEpochs()"(overrides?: CallOverrides): Promise<BigNumber>;

    totalRewardWeight(overrides?: CallOverrides): Promise<BigNumber>;

    "totalRewardWeight()"(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    withdraw(
      _poolId: BigNumberish,
      _withdrawAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "withdraw(uint256,uint256)"(
      _poolId: BigNumberish,
      _withdrawAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    acceptGovernance(overrides?: Overrides): Promise<PopulatedTransaction>;

    "acceptGovernance()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    blocksPerEpoch(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "blocksPerEpoch()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    claim(
      _poolId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "claim(uint256)"(
      _poolId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    createPool(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createPool(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    deposit(
      _poolId: BigNumberish,
      _depositAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "deposit(uint256,uint256)"(
      _poolId: BigNumberish,
      _depositAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    exit(
      _poolId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "exit(uint256)"(
      _poolId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getPoolRewardWeight(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPoolRewardWeight(uint256)"(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPoolToken(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPoolToken(uint256)"(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPoolTotalDeposited(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPoolTotalDeposited(uint256)"(
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getStakeTotalDeposited(
      _account: string,
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getStakeTotalDeposited(address,uint256)"(
      _account: string,
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getStakeTotalUnclaimed(
      _account: string,
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getStakeTotalUnclaimed(address,uint256)"(
      _account: string,
      _poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    governance(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "governance()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    initialize(
      _reward: string,
      _governance: string,
      _rewardRate: BigNumberish,
      _reducedRewardRatePerEpoch: BigNumberish,
      _startBlock: BigNumberish,
      _blocksPerEpoch: BigNumberish,
      _totalReducedEpochs: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(address,address,uint256,uint256,uint256,uint256,uint256)"(
      _reward: string,
      _governance: string,
      _rewardRate: BigNumberish,
      _reducedRewardRatePerEpoch: BigNumberish,
      _startBlock: BigNumberish,
      _blocksPerEpoch: BigNumberish,
      _totalReducedEpochs: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pendingGovernance(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "pendingGovernance()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    poolCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "poolCount()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    reducedRewardRatePerEpoch(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "reducedRewardRatePerEpoch()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    reward(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "reward()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    rewardRate(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "rewardRate()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setPendingGovernance(
      _pendingGovernance: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setPendingGovernance(address)"(
      _pendingGovernance: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setRewardRate(
      _rewardRate: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setRewardRate(uint256)"(
      _rewardRate: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setRewardWeights(
      _rewardWeights: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setRewardWeights(uint256[])"(
      _rewardWeights: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    startBlock(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "startBlock()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    tokenPoolIds(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenPoolIds(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalReducedEpochs(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "totalReducedEpochs()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalRewardWeight(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "totalRewardWeight()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    withdraw(
      _poolId: BigNumberish,
      _withdrawAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "withdraw(uint256,uint256)"(
      _poolId: BigNumberish,
      _withdrawAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
