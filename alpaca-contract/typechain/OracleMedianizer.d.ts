/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface OracleMedianizerInterface extends ethers.utils.Interface {
  functions: {
    "MAX_PRICE_DEVIATION()": FunctionFragment;
    "MIN_PRICE_DEVIATION()": FunctionFragment;
    "getPrice(address,address)": FunctionFragment;
    "initialize()": FunctionFragment;
    "maxPriceDeviations(address,address)": FunctionFragment;
    "maxPriceStales(address,address)": FunctionFragment;
    "owner()": FunctionFragment;
    "primarySourceCount(address,address)": FunctionFragment;
    "primarySources(address,address,uint256)": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setMultiPrimarySources(address[],address[],uint256[],uint256[],address[][])": FunctionFragment;
    "setPrimarySources(address,address,uint256,uint256,address[])": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "MAX_PRICE_DEVIATION",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MIN_PRICE_DEVIATION",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getPrice",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "maxPriceDeviations",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "maxPriceStales",
    values: [string, string]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "primarySourceCount",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "primarySources",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setMultiPrimarySources",
    values: [string[], string[], BigNumberish[], BigNumberish[], string[][]]
  ): string;
  encodeFunctionData(
    functionFragment: "setPrimarySources",
    values: [string, string, BigNumberish, BigNumberish, string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "MAX_PRICE_DEVIATION",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MIN_PRICE_DEVIATION",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getPrice", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "maxPriceDeviations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "maxPriceStales",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "primarySourceCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "primarySources",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMultiPrimarySources",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPrimarySources",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
    "SetPrimarySources(address,address,uint256,uint256,address[])": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetPrimarySources"): EventFragment;
}

export class OracleMedianizer extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: OracleMedianizerInterface;

  functions: {
    MAX_PRICE_DEVIATION(overrides?: CallOverrides): Promise<[BigNumber]>;

    "MAX_PRICE_DEVIATION()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    MIN_PRICE_DEVIATION(overrides?: CallOverrides): Promise<[BigNumber]>;

    "MIN_PRICE_DEVIATION()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    getPrice(
      token0: string,
      token1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    "getPrice(address,address)"(
      token0: string,
      token1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    initialize(overrides?: Overrides): Promise<ContractTransaction>;

    "initialize()"(overrides?: Overrides): Promise<ContractTransaction>;

    maxPriceDeviations(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "maxPriceDeviations(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    maxPriceStales(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "maxPriceStales(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    primarySourceCount(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "primarySourceCount(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    primarySources(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "primarySources(address,address,uint256)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

    setMultiPrimarySources(
      token0s: string[],
      token1s: string[],
      maxPriceDeviationList: BigNumberish[],
      maxPriceStaleList: BigNumberish[],
      allSources: string[][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setMultiPrimarySources(address[],address[],uint256[],uint256[],address[][])"(
      token0s: string[],
      token1s: string[],
      maxPriceDeviationList: BigNumberish[],
      maxPriceStaleList: BigNumberish[],
      allSources: string[][],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setPrimarySources(
      token0: string,
      token1: string,
      maxPriceDeviation: BigNumberish,
      maxPriceStale: BigNumberish,
      sources: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setPrimarySources(address,address,uint256,uint256,address[])"(
      token0: string,
      token1: string,
      maxPriceDeviation: BigNumberish,
      maxPriceStale: BigNumberish,
      sources: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  MAX_PRICE_DEVIATION(overrides?: CallOverrides): Promise<BigNumber>;

  "MAX_PRICE_DEVIATION()"(overrides?: CallOverrides): Promise<BigNumber>;

  MIN_PRICE_DEVIATION(overrides?: CallOverrides): Promise<BigNumber>;

  "MIN_PRICE_DEVIATION()"(overrides?: CallOverrides): Promise<BigNumber>;

  getPrice(
    token0: string,
    token1: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber]>;

  "getPrice(address,address)"(
    token0: string,
    token1: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber]>;

  initialize(overrides?: Overrides): Promise<ContractTransaction>;

  "initialize()"(overrides?: Overrides): Promise<ContractTransaction>;

  maxPriceDeviations(
    arg0: string,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "maxPriceDeviations(address,address)"(
    arg0: string,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  maxPriceStales(
    arg0: string,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "maxPriceStales(address,address)"(
    arg0: string,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  primarySourceCount(
    arg0: string,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "primarySourceCount(address,address)"(
    arg0: string,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  primarySources(
    arg0: string,
    arg1: string,
    arg2: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "primarySources(address,address,uint256)"(
    arg0: string,
    arg1: string,
    arg2: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

  "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

  setMultiPrimarySources(
    token0s: string[],
    token1s: string[],
    maxPriceDeviationList: BigNumberish[],
    maxPriceStaleList: BigNumberish[],
    allSources: string[][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setMultiPrimarySources(address[],address[],uint256[],uint256[],address[][])"(
    token0s: string[],
    token1s: string[],
    maxPriceDeviationList: BigNumberish[],
    maxPriceStaleList: BigNumberish[],
    allSources: string[][],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setPrimarySources(
    token0: string,
    token1: string,
    maxPriceDeviation: BigNumberish,
    maxPriceStale: BigNumberish,
    sources: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setPrimarySources(address,address,uint256,uint256,address[])"(
    token0: string,
    token1: string,
    maxPriceDeviation: BigNumberish,
    maxPriceStale: BigNumberish,
    sources: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    MAX_PRICE_DEVIATION(overrides?: CallOverrides): Promise<BigNumber>;

    "MAX_PRICE_DEVIATION()"(overrides?: CallOverrides): Promise<BigNumber>;

    MIN_PRICE_DEVIATION(overrides?: CallOverrides): Promise<BigNumber>;

    "MIN_PRICE_DEVIATION()"(overrides?: CallOverrides): Promise<BigNumber>;

    getPrice(
      token0: string,
      token1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    "getPrice(address,address)"(
      token0: string,
      token1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    initialize(overrides?: CallOverrides): Promise<void>;

    "initialize()"(overrides?: CallOverrides): Promise<void>;

    maxPriceDeviations(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "maxPriceDeviations(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    maxPriceStales(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "maxPriceStales(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    primarySourceCount(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "primarySourceCount(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    primarySources(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "primarySources(address,address,uint256)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    setMultiPrimarySources(
      token0s: string[],
      token1s: string[],
      maxPriceDeviationList: BigNumberish[],
      maxPriceStaleList: BigNumberish[],
      allSources: string[][],
      overrides?: CallOverrides
    ): Promise<void>;

    "setMultiPrimarySources(address[],address[],uint256[],uint256[],address[][])"(
      token0s: string[],
      token1s: string[],
      maxPriceDeviationList: BigNumberish[],
      maxPriceStaleList: BigNumberish[],
      allSources: string[][],
      overrides?: CallOverrides
    ): Promise<void>;

    setPrimarySources(
      token0: string,
      token1: string,
      maxPriceDeviation: BigNumberish,
      maxPriceStale: BigNumberish,
      sources: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    "setPrimarySources(address,address,uint256,uint256,address[])"(
      token0: string,
      token1: string,
      maxPriceDeviation: BigNumberish,
      maxPriceStale: BigNumberish,
      sources: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): EventFilter;

    SetPrimarySources(
      token0: string | null,
      token1: string | null,
      maxPriceDeviation: null,
      maxPriceStale: null,
      oracles: null
    ): EventFilter;
  };

  estimateGas: {
    MAX_PRICE_DEVIATION(overrides?: CallOverrides): Promise<BigNumber>;

    "MAX_PRICE_DEVIATION()"(overrides?: CallOverrides): Promise<BigNumber>;

    MIN_PRICE_DEVIATION(overrides?: CallOverrides): Promise<BigNumber>;

    "MIN_PRICE_DEVIATION()"(overrides?: CallOverrides): Promise<BigNumber>;

    getPrice(
      token0: string,
      token1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPrice(address,address)"(
      token0: string,
      token1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(overrides?: Overrides): Promise<BigNumber>;

    "initialize()"(overrides?: Overrides): Promise<BigNumber>;

    maxPriceDeviations(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "maxPriceDeviations(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    maxPriceStales(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "maxPriceStales(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    primarySourceCount(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "primarySourceCount(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    primarySources(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "primarySources(address,address,uint256)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    renounceOwnership(overrides?: Overrides): Promise<BigNumber>;

    "renounceOwnership()"(overrides?: Overrides): Promise<BigNumber>;

    setMultiPrimarySources(
      token0s: string[],
      token1s: string[],
      maxPriceDeviationList: BigNumberish[],
      maxPriceStaleList: BigNumberish[],
      allSources: string[][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setMultiPrimarySources(address[],address[],uint256[],uint256[],address[][])"(
      token0s: string[],
      token1s: string[],
      maxPriceDeviationList: BigNumberish[],
      maxPriceStaleList: BigNumberish[],
      allSources: string[][],
      overrides?: Overrides
    ): Promise<BigNumber>;

    setPrimarySources(
      token0: string,
      token1: string,
      maxPriceDeviation: BigNumberish,
      maxPriceStale: BigNumberish,
      sources: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setPrimarySources(address,address,uint256,uint256,address[])"(
      token0: string,
      token1: string,
      maxPriceDeviation: BigNumberish,
      maxPriceStale: BigNumberish,
      sources: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    MAX_PRICE_DEVIATION(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "MAX_PRICE_DEVIATION()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MIN_PRICE_DEVIATION(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "MIN_PRICE_DEVIATION()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPrice(
      token0: string,
      token1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPrice(address,address)"(
      token0: string,
      token1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(overrides?: Overrides): Promise<PopulatedTransaction>;

    "initialize()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    maxPriceDeviations(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "maxPriceDeviations(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    maxPriceStales(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "maxPriceStales(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    primarySourceCount(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "primarySourceCount(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    primarySources(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "primarySources(address,address,uint256)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    setMultiPrimarySources(
      token0s: string[],
      token1s: string[],
      maxPriceDeviationList: BigNumberish[],
      maxPriceStaleList: BigNumberish[],
      allSources: string[][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setMultiPrimarySources(address[],address[],uint256[],uint256[],address[][])"(
      token0s: string[],
      token1s: string[],
      maxPriceDeviationList: BigNumberish[],
      maxPriceStaleList: BigNumberish[],
      allSources: string[][],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setPrimarySources(
      token0: string,
      token1: string,
      maxPriceDeviation: BigNumberish,
      maxPriceStale: BigNumberish,
      sources: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setPrimarySources(address,address,uint256,uint256,address[])"(
      token0: string,
      token1: string,
      maxPriceDeviation: BigNumberish,
      maxPriceStale: BigNumberish,
      sources: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
