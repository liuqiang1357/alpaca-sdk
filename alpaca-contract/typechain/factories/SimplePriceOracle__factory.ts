/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SimplePriceOracle } from "../SimplePriceOracle";

export class SimplePriceOracle__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SimplePriceOracle> {
    return super.deploy(overrides || {}) as Promise<SimplePriceOracle>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SimplePriceOracle {
    return super.attach(address) as SimplePriceOracle;
  }
  connect(signer: Signer): SimplePriceOracle__factory {
    return super.connect(signer) as SimplePriceOracle__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimplePriceOracle {
    return new Contract(address, _abi, signerOrProvider) as SimplePriceOracle;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "PriceUpdate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeder",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeder",
        type: "address",
      },
    ],
    name: "setFeeder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "token0s",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "token1s",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "prices",
        type: "uint256[]",
      },
    ],
    name: "setPrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "store",
    outputs: [
      {
        internalType: "uint192",
        name: "price",
        type: "uint192",
      },
      {
        internalType: "uint64",
        name: "lastUpdate",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c46806100206000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c806304d745bb1461007d578063715018a6146100a55780638da5cb5b146100ad578063922aaa54146100d1578063ac41865a146101df578063b13be7c214610226578063c4d66de81461027f578063f2fde38b146102a5575b600080fd5b6100a36004803603602081101561009357600080fd5b50356001600160a01b03166102cb565b005b6100a3610345565b6100b56103d5565b604080516001600160a01b039092168252519081900360200190f35b6100a3600480360360608110156100e757600080fd5b810190602081018135600160201b81111561010157600080fd5b82018360208201111561011357600080fd5b803590602001918460208302840111600160201b8311171561013457600080fd5b919390929091602081019035600160201b81111561015157600080fd5b82018360208201111561016357600080fd5b803590602001918460208302840111600160201b8311171561018457600080fd5b919390929091602081019035600160201b8111156101a157600080fd5b8201836020820111156101b357600080fd5b803590602001918460208302840111600160201b831117156101d457600080fd5b5090925090506103e4565b61020d600480360360408110156101f557600080fd5b506001600160a01b03813581169160200135166105d0565b6040805192835260208301919091528051918290030190f35b6102546004803603604081101561023c57600080fd5b506001600160a01b0381358116916020013516610685565b604080516001600160c01b0390931683526001600160401b0390911660208301528051918290030190f35b6100a36004803603602081101561029557600080fd5b50356001600160a01b03166106bd565b6100a3600480360360208110156102bb57600080fd5b50356001600160a01b0316610783565b6102d361086a565b6065546001600160a01b03908116911614610323576040805162461bcd60e51b81526020600482018190526024820152600080516020610b47833981519152604482015290519081900360640190fd5b609780546001600160a01b0319166001600160a01b0392909216919091179055565b61034d61086a565b6065546001600160a01b0390811691161461039d576040805162461bcd60e51b81526020600482018190526024820152600080516020610b47833981519152604482015290519081900360640190fd5b6065546040516000916001600160a01b031690600080516020610b67833981519152908390a3606580546001600160a01b0319169055565b6065546001600160a01b031690565b6097546001600160a01b0316331461042d5760405162461bcd60e51b815260040180806020018281038252602b815260200180610b1c602b913960400191505060405180910390fd5b8483811461046c5760405162461bcd60e51b8152600401808060200182810382526031815260200180610aeb6031913960400191505060405180910390fd5b8181146104aa5760405162461bcd60e51b8152600401808060200182810382526030815260200180610be16030913960400191505060405180910390fd5b60005b818110156105c65760008888838181106104c357fe5b905060200201356001600160a01b0316905060008787848181106104e357fe5b905060200201356001600160a01b03169050600086868581811061050357fe5b6040805180820182526001600160c01b036020938402959095013585811682526001600160401b034281168386019081526001600160a01b03808c16600081815260988952878120928d16808252928952879020955186549351909416600160c01b02938a166001600160c01b03199093169290921790981691909117909255825181815292519096509093507f70b5f9f8ff6c1a28c0a5fdf3554e857baac5c6fd461bc00d0d83b50272f75a8f929181900390910190a35050506001016104ad565b5050505050505050565b6000806105db610aad565b5050506001600160a01b0382811660009081526098602090815260408083209385168352928152908290208251808401909352546001600160c01b038116808452600160c01b9091046001600160401b031691830182905291821580159061064257508115155b61067d5760405162461bcd60e51b815260040180806020018281038252602c815260200180610bb5602c913960400191505060405180910390fd5b509250929050565b60986020908152600092835260408084209091529082529020546001600160c01b03811690600160c01b90046001600160401b031682565b600054610100900460ff16806106d657506106d661086e565b806106e4575060005460ff16155b61071f5760405162461bcd60e51b815260040180806020018281038252602e815260200180610b87602e913960400191505060405180910390fd5b600054610100900460ff1615801561074a576000805460ff1961ff0019909116610100171660011790555b610752610874565b609780546001600160a01b0319166001600160a01b038416179055801561077f576000805461ff00191690555b5050565b61078b61086a565b6065546001600160a01b039081169116146107db576040805162461bcd60e51b81526020600482018190526024820152600080516020610b47833981519152604482015290519081900360640190fd5b6001600160a01b0381166108205760405162461bcd60e51b8152600401808060200182810382526026815260200180610ac56026913960400191505060405180910390fd5b6065546040516001600160a01b03808416921690600080516020610b6783398151915290600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b303b1590565b600054610100900460ff168061088d575061088d61086e565b8061089b575060005460ff16155b6108d65760405162461bcd60e51b815260040180806020018281038252602e815260200180610b87602e913960400191505060405180910390fd5b600054610100900460ff16158015610901576000805460ff1961ff0019909116610100171660011790555b610909610926565b6109116109c6565b8015610923576000805461ff00191690555b50565b600054610100900460ff168061093f575061093f61086e565b8061094d575060005460ff16155b6109885760405162461bcd60e51b815260040180806020018281038252602e815260200180610b87602e913960400191505060405180910390fd5b600054610100900460ff16158015610911576000805460ff1961ff0019909116610100171660011790558015610923576000805461ff001916905550565b600054610100900460ff16806109df57506109df61086e565b806109ed575060005460ff16155b610a285760405162461bcd60e51b815260040180806020018281038252602e815260200180610b87602e913960400191505060405180910390fd5b600054610100900460ff16158015610a53576000805460ff1961ff0019909116610100171660011790555b6000610a5d61086a565b606580546001600160a01b0319166001600160a01b03831690811790915560405191925090600090600080516020610b67833981519152908290a3508015610923576000805461ff001916905550565b60408051808201909152600080825260208201529056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737353696d706c6550726963654f7261636c653a3a7365745072696365733a3a2062616420746f6b656e3173206c656e67746853696d706c6550726963654f7261636c653a3a6f6e6c794665656465723a3a206f6e6c79206665656465724f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656453696d706c6550726963654f7261636c653a3a67657450726963653a3a20626164207072696365206461746153696d706c6550726963654f7261636c653a3a7365745072696365733a3a2062616420707269636573206c656e677468a2646970667358221220fb7b34637ca3e325fbffe43c66a125f1e4c18926ede521b211372cbbc236989a64736f6c63430006060033";
