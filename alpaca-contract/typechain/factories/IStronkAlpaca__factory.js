"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IStronkAlpaca__factory = void 0;
const ethers_1 = require("ethers");
class IStronkAlpaca__factory {
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IStronkAlpaca__factory = IStronkAlpaca__factory;
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "relayer",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "receivingStronkAlpacaAmount",
                type: "uint256",
            },
        ],
        name: "Hodl",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "relayer",
                type: "address",
            },
        ],
        name: "PrepareHodl",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "receivingAlpacaAmount",
                type: "uint256",
            },
        ],
        name: "Unhodl",
        type: "event",
    },
    {
        inputs: [],
        name: "hodl",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "prepareHodl",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "unhodl",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
